/*
* generated by Xtext
*/
grammar InternalHaxe;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package ee.xtext.haxe.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ee.xtext.haxe.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import ee.xtext.haxe.services.HaxeGrammarAccess;

}

@parser::members {
 
 	private HaxeGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(HaxeGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulePackage
entryRulePackage 
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageAccess().getGroup()); }
(rule__Package__Group__0)
{ after(grammarAccess.getPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUsing
entryRuleUsing 
:
{ before(grammarAccess.getUsingRule()); }
	 ruleUsing
{ after(grammarAccess.getUsingRule()); } 
	 EOF 
;

// Rule Using
ruleUsing
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsingAccess().getGroup()); }
(rule__Using__Group__0)
{ after(grammarAccess.getUsingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleClassOrInterface
entryRuleClassOrInterface 
:
{ before(grammarAccess.getClassOrInterfaceRule()); }
	 ruleClassOrInterface
{ after(grammarAccess.getClassOrInterfaceRule()); } 
	 EOF 
;

// Rule ClassOrInterface
ruleClassOrInterface
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassOrInterfaceAccess().getAlternatives()); }
(rule__ClassOrInterface__Alternatives)
{ after(grammarAccess.getClassOrInterfaceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getGroup()); }
(rule__Class__Group__0)
{ after(grammarAccess.getClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassMember
entryRuleClassMember 
:
{ before(grammarAccess.getClassMemberRule()); }
	 ruleClassMember
{ after(grammarAccess.getClassMemberRule()); } 
	 EOF 
;

// Rule ClassMember
ruleClassMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassMemberAccess().getAlternatives()); }
(rule__ClassMember__Alternatives)
{ after(grammarAccess.getClassMemberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterface
entryRuleInterface 
:
{ before(grammarAccess.getInterfaceRule()); }
	 ruleInterface
{ after(grammarAccess.getInterfaceRule()); } 
	 EOF 
;

// Rule Interface
ruleInterface
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceAccess().getGroup()); }
(rule__Interface__Group__0)
{ after(grammarAccess.getInterfaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnum
entryRuleEnum 
:
{ before(grammarAccess.getEnumRule()); }
	 ruleEnum
{ after(grammarAccess.getEnumRule()); } 
	 EOF 
;

// Rule Enum
ruleEnum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumAccess().getGroup()); }
(rule__Enum__Group__0)
{ after(grammarAccess.getEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumConstructor
entryRuleEnumConstructor 
:
{ before(grammarAccess.getEnumConstructorRule()); }
	 ruleEnumConstructor
{ after(grammarAccess.getEnumConstructorRule()); } 
	 EOF 
;

// Rule EnumConstructor
ruleEnumConstructor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumConstructorAccess().getGroup()); }
(rule__EnumConstructor__Group__0)
{ after(grammarAccess.getEnumConstructorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedef
entryRuleTypedef 
:
{ before(grammarAccess.getTypedefRule()); }
	 ruleTypedef
{ after(grammarAccess.getTypedefRule()); } 
	 EOF 
;

// Rule Typedef
ruleTypedef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedefAccess().getGroup()); }
(rule__Typedef__Group__0)
{ after(grammarAccess.getTypedefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeReference
entryRuleTypeReference 
:
{ before(grammarAccess.getTypeReferenceRule()); }
	 ruleTypeReference
{ after(grammarAccess.getTypeReferenceRule()); } 
	 EOF 
;

// Rule TypeReference
ruleTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeReferenceAccess().getGroup()); }
(rule__TypeReference__Group__0)
{ after(grammarAccess.getTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassReference
entryRuleClassReference 
:
{ before(grammarAccess.getClassReferenceRule()); }
	 ruleClassReference
{ after(grammarAccess.getClassReferenceRule()); } 
	 EOF 
;

// Rule ClassReference
ruleClassReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassReferenceAccess().getGroup()); }
(rule__ClassReference__Group__0)
{ after(grammarAccess.getClassReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceReference
entryRuleInterfaceReference 
:
{ before(grammarAccess.getInterfaceReferenceRule()); }
	 ruleInterfaceReference
{ after(grammarAccess.getInterfaceReferenceRule()); } 
	 EOF 
;

// Rule InterfaceReference
ruleInterfaceReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceReferenceAccess().getGroup()); }
(rule__InterfaceReference__Group__0)
{ after(grammarAccess.getInterfaceReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassOrInterfaceReference
entryRuleClassOrInterfaceReference 
:
{ before(grammarAccess.getClassOrInterfaceReferenceRule()); }
	 ruleClassOrInterfaceReference
{ after(grammarAccess.getClassOrInterfaceReferenceRule()); } 
	 EOF 
;

// Rule ClassOrInterfaceReference
ruleClassOrInterfaceReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassOrInterfaceReferenceAccess().getAlternatives()); }
(rule__ClassOrInterfaceReference__Alternatives)
{ after(grammarAccess.getClassOrInterfaceReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableMemberDeclaration
entryRuleVariableMemberDeclaration 
:
{ before(grammarAccess.getVariableMemberDeclarationRule()); }
	 ruleVariableMemberDeclaration
{ after(grammarAccess.getVariableMemberDeclarationRule()); } 
	 EOF 
;

// Rule VariableMemberDeclaration
ruleVariableMemberDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getGroup()); }
(rule__VariableMemberDeclaration__Group__0)
{ after(grammarAccess.getVariableMemberDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGetterSetterID
entryRuleGetterSetterID 
:
{ before(grammarAccess.getGetterSetterIDRule()); }
	 ruleGetterSetterID
{ after(grammarAccess.getGetterSetterIDRule()); } 
	 EOF 
;

// Rule GetterSetterID
ruleGetterSetterID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGetterSetterIDAccess().getAlternatives()); }
(rule__GetterSetterID__Alternatives)
{ after(grammarAccess.getGetterSetterIDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionMemberDeclaration
entryRuleFunctionMemberDeclaration 
:
{ before(grammarAccess.getFunctionMemberDeclarationRule()); }
	 ruleFunctionMemberDeclaration
{ after(grammarAccess.getFunctionMemberDeclarationRule()); } 
	 EOF 
;

// Rule FunctionMemberDeclaration
ruleFunctionMemberDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getGroup()); }
(rule__FunctionMemberDeclaration__Group__0)
{ after(grammarAccess.getFunctionMemberDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructor
entryRuleConstructor 
:
{ before(grammarAccess.getConstructorRule()); }
	 ruleConstructor
{ after(grammarAccess.getConstructorRule()); } 
	 EOF 
;

// Rule Constructor
ruleConstructor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorAccess().getGroup()); }
(rule__Constructor__Group__0)
{ after(grammarAccess.getConstructorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidID
entryRuleValidID 
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureID
entryRuleFeatureID 
:
{ before(grammarAccess.getFeatureIDRule()); }
	 ruleFeatureID
{ after(grammarAccess.getFeatureIDRule()); } 
	 EOF 
;

// Rule FeatureID
ruleFeatureID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureIDAccess().getAlternatives()); }
(rule__FeatureID__Alternatives)
{ after(grammarAccess.getFeatureIDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleFormalParameter
entryRuleFormalParameter 
:
{ before(grammarAccess.getFormalParameterRule()); }
	 ruleFormalParameter
{ after(grammarAccess.getFormalParameterRule()); } 
	 EOF 
;

// Rule FormalParameter
ruleFormalParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormalParameterAccess().getGroup()); }
(rule__FormalParameter__Group__0)
{ after(grammarAccess.getFormalParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModifier
entryRuleModifier 
:
{ before(grammarAccess.getModifierRule()); }
	 ruleModifier
{ after(grammarAccess.getModifierRule()); } 
	 EOF 
;

// Rule Modifier
ruleModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModifierAccess().getGroup()); }
(rule__Modifier__Group__0)
{ after(grammarAccess.getModifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeParameters
entryRuleTypeParameters 
:
{ before(grammarAccess.getTypeParametersRule()); }
	 ruleTypeParameters
{ after(grammarAccess.getTypeParametersRule()); } 
	 EOF 
;

// Rule TypeParameters
ruleTypeParameters
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeParametersAccess().getGroup()); }
(rule__TypeParameters__Group__0)
{ after(grammarAccess.getTypeParametersAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeParameter
entryRuleTypeParameter 
:
{ before(grammarAccess.getTypeParameterRule()); }
	 ruleTypeParameter
{ after(grammarAccess.getTypeParameterRule()); } 
	 EOF 
;

// Rule TypeParameter
ruleTypeParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeParameterAccess().getGroup()); }
(rule__TypeParameter__Group__0)
{ after(grammarAccess.getTypeParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getAlternatives()); }
(rule__Assignment__Alternatives)
{ after(grammarAccess.getAssignmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign 
:
{ before(grammarAccess.getOpSingleAssignRule()); }
	 ruleOpSingleAssign
{ after(grammarAccess.getOpSingleAssignRule()); } 
	 EOF 
;

// Rule OpSingleAssign
ruleOpSingleAssign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); }

	'=' 

{ after(grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign 
:
{ before(grammarAccess.getOpMultiAssignRule()); }
	 ruleOpMultiAssign
{ after(grammarAccess.getOpMultiAssignRule()); } 
	 EOF 
;

// Rule OpMultiAssign
ruleOpMultiAssign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpMultiAssignAccess().getAlternatives()); }
(rule__OpMultiAssign__Alternatives)
{ after(grammarAccess.getOpMultiAssignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpOr
entryRuleOpOr 
:
{ before(grammarAccess.getOpOrRule()); }
	 ruleOpOr
{ after(grammarAccess.getOpOrRule()); } 
	 EOF 
;

// Rule OpOr
ruleOpOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); }

	'||' 

{ after(grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAnd
entryRuleOpAnd 
:
{ before(grammarAccess.getOpAndRule()); }
	 ruleOpAnd
{ after(grammarAccess.getOpAndRule()); } 
	 EOF 
;

// Rule OpAnd
ruleOpAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); }

	'&&' 

{ after(grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOtherOperatorExpression
entryRuleOtherOperatorExpression 
:
{ before(grammarAccess.getOtherOperatorExpressionRule()); }
	 ruleOtherOperatorExpression
{ after(grammarAccess.getOtherOperatorExpressionRule()); } 
	 EOF 
;

// Rule OtherOperatorExpression
ruleOtherOperatorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getGroup()); }
(rule__OtherOperatorExpression__Group__0)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpOther
entryRuleOpOther 
:
{ before(grammarAccess.getOpOtherRule()); }
	 ruleOpOther
{ after(grammarAccess.getOpOtherRule()); } 
	 EOF 
;

// Rule OpOther
ruleOpOther
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpOtherAccess().getFullStopFullStopFullStopKeyword()); }

	'...' 

{ after(grammarAccess.getOpOtherAccess().getFullStopFullStopFullStopKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareExpression
entryRuleCompareExpression 
:
{ before(grammarAccess.getCompareExpressionRule()); }
	 ruleCompareExpression
{ after(grammarAccess.getCompareExpressionRule()); } 
	 EOF 
;

// Rule CompareExpression
ruleCompareExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareExpressionAccess().getGroup()); }
(rule__CompareExpression__Group__0)
{ after(grammarAccess.getCompareExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpCompare
entryRuleOpCompare 
:
{ before(grammarAccess.getOpCompareRule()); }
	 ruleOpCompare
{ after(grammarAccess.getOpCompareRule()); } 
	 EOF 
;

// Rule OpCompare
ruleOpCompare
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpCompareAccess().getAlternatives()); }
(rule__OpCompare__Alternatives)
{ after(grammarAccess.getOpCompareAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitwiseExpression
entryRuleBitwiseExpression 
:
{ before(grammarAccess.getBitwiseExpressionRule()); }
	 ruleBitwiseExpression
{ after(grammarAccess.getBitwiseExpressionRule()); } 
	 EOF 
;

// Rule BitwiseExpression
ruleBitwiseExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitwiseExpressionAccess().getGroup()); }
(rule__BitwiseExpression__Group__0)
{ after(grammarAccess.getBitwiseExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpBitwise
entryRuleOpBitwise 
:
{ before(grammarAccess.getOpBitwiseRule()); }
	 ruleOpBitwise
{ after(grammarAccess.getOpBitwiseRule()); } 
	 EOF 
;

// Rule OpBitwise
ruleOpBitwise
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpBitwiseAccess().getAlternatives()); }
(rule__OpBitwise__Alternatives)
{ after(grammarAccess.getOpBitwiseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitshiftExpression
entryRuleBitshiftExpression 
:
{ before(grammarAccess.getBitshiftExpressionRule()); }
	 ruleBitshiftExpression
{ after(grammarAccess.getBitshiftExpressionRule()); } 
	 EOF 
;

// Rule BitshiftExpression
ruleBitshiftExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitshiftExpressionAccess().getGroup()); }
(rule__BitshiftExpression__Group__0)
{ after(grammarAccess.getBitshiftExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpBitshift
entryRuleOpBitshift 
:
{ before(grammarAccess.getOpBitshiftRule()); }
	 ruleOpBitshift
{ after(grammarAccess.getOpBitshiftRule()); } 
	 EOF 
;

// Rule OpBitshift
ruleOpBitshift
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpBitshiftAccess().getAlternatives()); }
(rule__OpBitshift__Alternatives)
{ after(grammarAccess.getOpBitshiftAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddExpression
entryRuleAddExpression 
:
{ before(grammarAccess.getAddExpressionRule()); }
	 ruleAddExpression
{ after(grammarAccess.getAddExpressionRule()); } 
	 EOF 
;

// Rule AddExpression
ruleAddExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup()); }
(rule__AddExpression__Group__0)
{ after(grammarAccess.getAddExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAdd
entryRuleOpAdd 
:
{ before(grammarAccess.getOpAddRule()); }
	 ruleOpAdd
{ after(grammarAccess.getOpAddRule()); } 
	 EOF 
;

// Rule OpAdd
ruleOpAdd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAddAccess().getPlusSignKeyword()); }

	'+' 

{ after(grammarAccess.getOpAddAccess().getPlusSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubtractExpression
entryRuleSubtractExpression 
:
{ before(grammarAccess.getSubtractExpressionRule()); }
	 ruleSubtractExpression
{ after(grammarAccess.getSubtractExpressionRule()); } 
	 EOF 
;

// Rule SubtractExpression
ruleSubtractExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubtractExpressionAccess().getGroup()); }
(rule__SubtractExpression__Group__0)
{ after(grammarAccess.getSubtractExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpSubtract
entryRuleOpSubtract 
:
{ before(grammarAccess.getOpSubtractRule()); }
	 ruleOpSubtract
{ after(grammarAccess.getOpSubtractRule()); } 
	 EOF 
;

// Rule OpSubtract
ruleOpSubtract
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpSubtractAccess().getHyphenMinusKeyword()); }

	'-' 

{ after(grammarAccess.getOpSubtractAccess().getHyphenMinusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplyExpression
entryRuleMultiplyExpression 
:
{ before(grammarAccess.getMultiplyExpressionRule()); }
	 ruleMultiplyExpression
{ after(grammarAccess.getMultiplyExpressionRule()); } 
	 EOF 
;

// Rule MultiplyExpression
ruleMultiplyExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplyExpressionAccess().getGroup()); }
(rule__MultiplyExpression__Group__0)
{ after(grammarAccess.getMultiplyExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpMultiply
entryRuleOpMultiply 
:
{ before(grammarAccess.getOpMultiplyRule()); }
	 ruleOpMultiply
{ after(grammarAccess.getOpMultiplyRule()); } 
	 EOF 
;

// Rule OpMultiply
ruleOpMultiply
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpMultiplyAccess().getAsteriskKeyword()); }

	'*' 

{ after(grammarAccess.getOpMultiplyAccess().getAsteriskKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDivideExpression
entryRuleDivideExpression 
:
{ before(grammarAccess.getDivideExpressionRule()); }
	 ruleDivideExpression
{ after(grammarAccess.getDivideExpressionRule()); } 
	 EOF 
;

// Rule DivideExpression
ruleDivideExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDivideExpressionAccess().getGroup()); }
(rule__DivideExpression__Group__0)
{ after(grammarAccess.getDivideExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpDivide
entryRuleOpDivide 
:
{ before(grammarAccess.getOpDivideRule()); }
	 ruleOpDivide
{ after(grammarAccess.getOpDivideRule()); } 
	 EOF 
;

// Rule OpDivide
ruleOpDivide
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpDivideAccess().getSolidusKeyword()); }

	'/' 

{ after(grammarAccess.getOpDivideAccess().getSolidusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuloExpression
entryRuleModuloExpression 
:
{ before(grammarAccess.getModuloExpressionRule()); }
	 ruleModuloExpression
{ after(grammarAccess.getModuloExpressionRule()); } 
	 EOF 
;

// Rule ModuloExpression
ruleModuloExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuloExpressionAccess().getGroup()); }
(rule__ModuloExpression__Group__0)
{ after(grammarAccess.getModuloExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpModulo
entryRuleOpModulo 
:
{ before(grammarAccess.getOpModuloRule()); }
	 ruleOpModulo
{ after(grammarAccess.getOpModuloRule()); } 
	 EOF 
;

// Rule OpModulo
ruleOpModulo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpModuloAccess().getPercentSignKeyword()); }

	'%' 

{ after(grammarAccess.getOpModuloAccess().getPercentSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryOperation
entryRuleUnaryOperation 
:
{ before(grammarAccess.getUnaryOperationRule()); }
	 ruleUnaryOperation
{ after(grammarAccess.getUnaryOperationRule()); } 
	 EOF 
;

// Rule UnaryOperation
ruleUnaryOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryOperationAccess().getAlternatives()); }
(rule__UnaryOperation__Alternatives)
{ after(grammarAccess.getUnaryOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpUnary
entryRuleOpUnary 
:
{ before(grammarAccess.getOpUnaryRule()); }
	 ruleOpUnary
{ after(grammarAccess.getOpUnaryRule()); } 
	 EOF 
;

// Rule OpUnary
ruleOpUnary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpUnaryAccess().getAlternatives()); }
(rule__OpUnary__Alternatives)
{ after(grammarAccess.getOpUnaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePreIncrementOperation
entryRulePreIncrementOperation 
:
{ before(grammarAccess.getPreIncrementOperationRule()); }
	 rulePreIncrementOperation
{ after(grammarAccess.getPreIncrementOperationRule()); } 
	 EOF 
;

// Rule PreIncrementOperation
rulePreIncrementOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreIncrementOperationAccess().getAlternatives()); }
(rule__PreIncrementOperation__Alternatives)
{ after(grammarAccess.getPreIncrementOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostIncrementOperation
entryRulePostIncrementOperation 
:
{ before(grammarAccess.getPostIncrementOperationRule()); }
	 rulePostIncrementOperation
{ after(grammarAccess.getPostIncrementOperationRule()); } 
	 EOF 
;

// Rule PostIncrementOperation
rulePostIncrementOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostIncrementOperationAccess().getAlternatives()); }
(rule__PostIncrementOperation__Alternatives)
{ after(grammarAccess.getPostIncrementOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpIncrement
entryRuleOpIncrement 
:
{ before(grammarAccess.getOpIncrementRule()); }
	 ruleOpIncrement
{ after(grammarAccess.getOpIncrementRule()); } 
	 EOF 
;

// Rule OpIncrement
ruleOpIncrement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpIncrementAccess().getAlternatives()); }
(rule__OpIncrement__Alternatives)
{ after(grammarAccess.getOpIncrementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberFeatureCall
entryRuleMemberFeatureCall 
:
{ before(grammarAccess.getMemberFeatureCallRule()); }
	 ruleMemberFeatureCall
{ after(grammarAccess.getMemberFeatureCallRule()); } 
	 EOF 
;

// Rule MemberFeatureCall
ruleMemberFeatureCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup()); }
(rule__MemberFeatureCall__Group__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlockExpression
entryRuleBlockExpression 
:
{ before(grammarAccess.getBlockExpressionRule()); }
	 ruleBlockExpression
{ after(grammarAccess.getBlockExpressionRule()); } 
	 EOF 
;

// Rule BlockExpression
ruleBlockExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockExpressionAccess().getGroup()); }
(rule__BlockExpression__Group__0)
{ after(grammarAccess.getBlockExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionInsideBlock
entryRuleExpressionInsideBlock 
:
{ before(grammarAccess.getExpressionInsideBlockRule()); }
	 ruleExpressionInsideBlock
{ after(grammarAccess.getExpressionInsideBlockRule()); } 
	 EOF 
;

// Rule ExpressionInsideBlock
ruleExpressionInsideBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionInsideBlockAccess().getAlternatives()); }
(rule__ExpressionInsideBlock__Alternatives)
{ after(grammarAccess.getExpressionInsideBlockAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclarations
entryRuleVariableDeclarations 
:
{ before(grammarAccess.getVariableDeclarationsRule()); }
	 ruleVariableDeclarations
{ after(grammarAccess.getVariableDeclarationsRule()); } 
	 EOF 
;

// Rule VariableDeclarations
ruleVariableDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationsAccess().getGroup()); }
(rule__VariableDeclarations__Group__0)
{ after(grammarAccess.getVariableDeclarationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression 
:
{ before(grammarAccess.getParenthesizedExpressionRule()); }
	 ruleParenthesizedExpression
{ after(grammarAccess.getParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule ParenthesizedExpression
ruleParenthesizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
(rule__ParenthesizedExpression__Group__0)
{ after(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfExpression
entryRuleIfExpression 
:
{ before(grammarAccess.getIfExpressionRule()); }
	 ruleIfExpression
{ after(grammarAccess.getIfExpressionRule()); } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfExpressionAccess().getGroup()); }
(rule__IfExpression__Group__0)
{ after(grammarAccess.getIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileExpression
entryRuleWhileExpression 
:
{ before(grammarAccess.getWhileExpressionRule()); }
	 ruleWhileExpression
{ after(grammarAccess.getWhileExpressionRule()); } 
	 EOF 
;

// Rule WhileExpression
ruleWhileExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileExpressionAccess().getGroup()); }
(rule__WhileExpression__Group__0)
{ after(grammarAccess.getWhileExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoWhileExpression
entryRuleDoWhileExpression 
:
{ before(grammarAccess.getDoWhileExpressionRule()); }
	 ruleDoWhileExpression
{ after(grammarAccess.getDoWhileExpressionRule()); } 
	 EOF 
;

// Rule DoWhileExpression
ruleDoWhileExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getGroup()); }
(rule__DoWhileExpression__Group__0)
{ after(grammarAccess.getDoWhileExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForLoopExpression
entryRuleForLoopExpression 
:
{ before(grammarAccess.getForLoopExpressionRule()); }
	 ruleForLoopExpression
{ after(grammarAccess.getForLoopExpressionRule()); } 
	 EOF 
;

// Rule ForLoopExpression
ruleForLoopExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForLoopExpressionAccess().getGroup()); }
(rule__ForLoopExpression__Group__0)
{ after(grammarAccess.getForLoopExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnExpression
entryRuleReturnExpression 
:
{ before(grammarAccess.getReturnExpressionRule()); }
	 ruleReturnExpression
{ after(grammarAccess.getReturnExpressionRule()); } 
	 EOF 
;

// Rule ReturnExpression
ruleReturnExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnExpressionAccess().getGroup()); }
(rule__ReturnExpression__Group__0)
{ after(grammarAccess.getReturnExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBreakExpression
entryRuleBreakExpression 
:
{ before(grammarAccess.getBreakExpressionRule()); }
	 ruleBreakExpression
{ after(grammarAccess.getBreakExpressionRule()); } 
	 EOF 
;

// Rule BreakExpression
ruleBreakExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBreakExpressionAccess().getGroup()); }
(rule__BreakExpression__Group__0)
{ after(grammarAccess.getBreakExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContinueExpression
entryRuleContinueExpression 
:
{ before(grammarAccess.getContinueExpressionRule()); }
	 ruleContinueExpression
{ after(grammarAccess.getContinueExpressionRule()); } 
	 EOF 
;

// Rule ContinueExpression
ruleContinueExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContinueExpressionAccess().getGroup()); }
(rule__ContinueExpression__Group__0)
{ after(grammarAccess.getContinueExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThrowExpression
entryRuleThrowExpression 
:
{ before(grammarAccess.getThrowExpressionRule()); }
	 ruleThrowExpression
{ after(grammarAccess.getThrowExpressionRule()); } 
	 EOF 
;

// Rule ThrowExpression
ruleThrowExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThrowExpressionAccess().getGroup()); }
(rule__ThrowExpression__Group__0)
{ after(grammarAccess.getThrowExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTryCatchExpression
entryRuleTryCatchExpression 
:
{ before(grammarAccess.getTryCatchExpressionRule()); }
	 ruleTryCatchExpression
{ after(grammarAccess.getTryCatchExpressionRule()); } 
	 EOF 
;

// Rule TryCatchExpression
ruleTryCatchExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getGroup()); }
(rule__TryCatchExpression__Group__0)
{ after(grammarAccess.getTryCatchExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCatchClause
entryRuleCatchClause 
:
{ before(grammarAccess.getCatchClauseRule()); }
	 ruleCatchClause
{ after(grammarAccess.getCatchClauseRule()); } 
	 EOF 
;

// Rule CatchClause
ruleCatchClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCatchClauseAccess().getGroup()); }
(rule__CatchClause__Group__0)
{ after(grammarAccess.getCatchClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchExpression
entryRuleSwitchExpression 
:
{ before(grammarAccess.getSwitchExpressionRule()); }
	 ruleSwitchExpression
{ after(grammarAccess.getSwitchExpressionRule()); } 
	 EOF 
;

// Rule SwitchExpression
ruleSwitchExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchExpressionAccess().getGroup()); }
(rule__SwitchExpression__Group__0)
{ after(grammarAccess.getSwitchExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCasePart
entryRuleCasePart 
:
{ before(grammarAccess.getCasePartRule()); }
	 ruleCasePart
{ after(grammarAccess.getCasePartRule()); } 
	 EOF 
;

// Rule CasePart
ruleCasePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCasePartAccess().getGroup()); }
(rule__CasePart__Group__0)
{ after(grammarAccess.getCasePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionExpression
entryRuleFunctionExpression 
:
{ before(grammarAccess.getFunctionExpressionRule()); }
	 ruleFunctionExpression
{ after(grammarAccess.getFunctionExpressionRule()); } 
	 EOF 
;

// Rule FunctionExpression
ruleFunctionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionExpressionAccess().getGroup()); }
(rule__FunctionExpression__Group__0)
{ after(grammarAccess.getFunctionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleFeatureCall
entryRuleFeatureCall 
:
{ before(grammarAccess.getFeatureCallRule()); }
	 ruleFeatureCall
{ after(grammarAccess.getFeatureCallRule()); } 
	 EOF 
;

// Rule FeatureCall
ruleFeatureCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureCallAccess().getGroup()); }
(rule__FeatureCall__Group__0)
{ after(grammarAccess.getFeatureCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorCall
entryRuleConstructorCall 
:
{ before(grammarAccess.getConstructorCallRule()); }
	 ruleConstructorCall
{ after(grammarAccess.getConstructorCallRule()); } 
	 EOF 
;

// Rule ConstructorCall
ruleConstructorCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorCallAccess().getGroup()); }
(rule__ConstructorCall__Group__0)
{ after(grammarAccess.getConstructorCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getGroup()); }
(rule__BooleanLiteral__Group__0)
{ after(grammarAccess.getBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullLiteral
entryRuleNullLiteral 
:
{ before(grammarAccess.getNullLiteralRule()); }
	 ruleNullLiteral
{ after(grammarAccess.getNullLiteralRule()); } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullLiteralAccess().getGroup()); }
(rule__NullLiteral__Group__0)
{ after(grammarAccess.getNullLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntLiteral
entryRuleIntLiteral 
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntLiteralAccess().getGroup()); }
(rule__IntLiteral__Group__0)
{ after(grammarAccess.getIntLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral 
:
{ before(grammarAccess.getFloatLiteralRule()); }
	 ruleFloatLiteral
{ after(grammarAccess.getFloatLiteralRule()); } 
	 EOF 
;

// Rule FloatLiteral
ruleFloatLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatLiteralAccess().getGroup()); }
(rule__FloatLiteral__Group__0)
{ after(grammarAccess.getFloatLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getGroup()); }
(rule__StringLiteral__Group__0)
{ after(grammarAccess.getStringLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegularExpressionLiteral
entryRuleRegularExpressionLiteral 
:
{ before(grammarAccess.getRegularExpressionLiteralRule()); }
	 ruleRegularExpressionLiteral
{ after(grammarAccess.getRegularExpressionLiteralRule()); } 
	 EOF 
;

// Rule RegularExpressionLiteral
ruleRegularExpressionLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegularExpressionLiteralAccess().getGroup()); }
(rule__RegularExpressionLiteral__Group__0)
{ after(grammarAccess.getRegularExpressionLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayLiteral
entryRuleArrayLiteral 
:
{ before(grammarAccess.getArrayLiteralRule()); }
	 ruleArrayLiteral
{ after(grammarAccess.getArrayLiteralRule()); } 
	 EOF 
;

// Rule ArrayLiteral
ruleArrayLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayLiteralAccess().getGroup()); }
(rule__ArrayLiteral__Group__0)
{ after(grammarAccess.getArrayLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectLiteral
entryRuleObjectLiteral 
:
{ before(grammarAccess.getObjectLiteralRule()); }
	 ruleObjectLiteral
{ after(grammarAccess.getObjectLiteralRule()); } 
	 EOF 
;

// Rule ObjectLiteral
ruleObjectLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectLiteralAccess().getGroup()); }
(rule__ObjectLiteral__Group__0)
{ after(grammarAccess.getObjectLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectElement
entryRuleObjectElement 
:
{ before(grammarAccess.getObjectElementRule()); }
	 ruleObjectElement
{ after(grammarAccess.getObjectElementRule()); } 
	 EOF 
;

// Rule ObjectElement
ruleObjectElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectElementAccess().getGroup()); }
(rule__ObjectElement__Group__0)
{ after(grammarAccess.getObjectElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloat
entryRuleFloat 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getFloatRule()); }
	 ruleFloat
{ after(grammarAccess.getFloatRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Float
ruleFloat
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatAccess().getAlternatives()); }
(rule__Float__Alternatives)
{ after(grammarAccess.getFloatAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}




// Rule Visibility
ruleVisibility
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getAlternatives()); }
(rule__Visibility__Alternatives)
{ after(grammarAccess.getVisibilityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ClassOrInterface__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOrInterfaceAccess().getClassParserRuleCall_0()); }
	ruleClass
{ after(grammarAccess.getClassOrInterfaceAccess().getClassParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassOrInterfaceAccess().getInterfaceParserRuleCall_1()); }
	ruleInterface
{ after(grammarAccess.getClassOrInterfaceAccess().getInterfaceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getFunctionMemberDeclarationParserRuleCall_0()); }
	ruleFunctionMemberDeclaration
{ after(grammarAccess.getClassMemberAccess().getFunctionMemberDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassMemberAccess().getVariableMemberDeclarationParserRuleCall_1()); }
	ruleVariableMemberDeclaration
{ after(grammarAccess.getClassMemberAccess().getVariableMemberDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOrInterfaceReferenceAccess().getClassReferenceParserRuleCall_0()); }
	ruleClassReference
{ after(grammarAccess.getClassOrInterfaceReferenceAccess().getClassReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassOrInterfaceReferenceAccess().getInterfaceReferenceParserRuleCall_1()); }
	ruleInterfaceReference
{ after(grammarAccess.getClassOrInterfaceReferenceAccess().getInterfaceReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetterSetterID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetterSetterIDAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getGetterSetterIDAccess().getValidIDParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGetterSetterIDAccess().getDefaultKeyword_1()); }

	'default' 

{ after(grammarAccess.getGetterSetterIDAccess().getDefaultKeyword_1()); }
)

    |(
{ before(grammarAccess.getGetterSetterIDAccess().getNullKeyword_2()); }

	'null' 

{ after(grammarAccess.getGetterSetterIDAccess().getNullKeyword_2()); }
)

    |(
{ before(grammarAccess.getGetterSetterIDAccess().getDynamicKeyword_3()); }

	'dynamic' 

{ after(grammarAccess.getGetterSetterIDAccess().getDynamicKeyword_3()); }
)

    |(
{ before(grammarAccess.getGetterSetterIDAccess().getNeverKeyword_4()); }

	'never' 

{ after(grammarAccess.getGetterSetterIDAccess().getNeverKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureIDAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getFeatureIDAccess().getValidIDParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureIDAccess().getSuperKeyword_1()); }

	'super' 

{ after(grammarAccess.getFeatureIDAccess().getSuperKeyword_1()); }
)

    |(
{ before(grammarAccess.getFeatureIDAccess().getThisKeyword_2()); }

	'this' 

{ after(grammarAccess.getFeatureIDAccess().getThisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_0()); }
(rule__Assignment__Group_0__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAssignmentAccess().getGroup_1()); }
(rule__Assignment__Group_1__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); }

	'+=' 

{ after(grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); }

	'-=' 

{ after(grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2()); }

	'*=' 

{ after(grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3()); }

	'/=' 

{ after(grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4()); }

	'%=' 

{ after(grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getAmpersandEqualsSignKeyword_5()); }

	'&=' 

{ after(grammarAccess.getOpMultiAssignAccess().getAmpersandEqualsSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getVerticalLineEqualsSignKeyword_6()); }

	'|=' 

{ after(grammarAccess.getOpMultiAssignAccess().getVerticalLineEqualsSignKeyword_6()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getCircumflexAccentEqualsSignKeyword_7()); }

	'^=' 

{ after(grammarAccess.getOpMultiAssignAccess().getCircumflexAccentEqualsSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getLessThanSignLessThanSignEqualsSignKeyword_8()); }

	'<<=' 

{ after(grammarAccess.getOpMultiAssignAccess().getLessThanSignLessThanSignEqualsSignKeyword_8()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_9()); }

	'>>=' 

{ after(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_9()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignGreaterThanSignGreaterThanSignEqualsSignKeyword_10()); }

	'>>>=' 

{ after(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignGreaterThanSignGreaterThanSignEqualsSignKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpCompare__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpCompareAccess().getEqualsSignEqualsSignKeyword_0()); }

	'==' 

{ after(grammarAccess.getOpCompareAccess().getEqualsSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getExclamationMarkEqualsSignKeyword_1()); }

	'!=' 

{ after(grammarAccess.getOpCompareAccess().getExclamationMarkEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_2()); }

	'>=' 

{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_3()); }

	'<=' 

{ after(grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_4()); }

	'>' 

{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_5()); }

	'<' 

{ after(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpBitwise__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpBitwiseAccess().getVerticalLineKeyword_0()); }

	'|' 

{ after(grammarAccess.getOpBitwiseAccess().getVerticalLineKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpBitwiseAccess().getAmpersandKeyword_1()); }

	'&' 

{ after(grammarAccess.getOpBitwiseAccess().getAmpersandKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpBitwiseAccess().getCircumflexAccentKeyword_2()); }

	'^' 

{ after(grammarAccess.getOpBitwiseAccess().getCircumflexAccentKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpBitshift__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpBitshiftAccess().getLessThanSignLessThanSignKeyword_0()); }

	'<<' 

{ after(grammarAccess.getOpBitshiftAccess().getLessThanSignLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpBitshiftAccess().getGreaterThanSignGreaterThanSignKeyword_1()); }

	'>>' 

{ after(grammarAccess.getOpBitshiftAccess().getGreaterThanSignGreaterThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpBitshiftAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_2()); }

	'>>>' 

{ after(grammarAccess.getOpBitshiftAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getGroup_0()); }
(rule__UnaryOperation__Group_0__0)
{ after(grammarAccess.getUnaryOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryOperationAccess().getPreIncrementOperationParserRuleCall_1()); }
	rulePreIncrementOperation
{ after(grammarAccess.getUnaryOperationAccess().getPreIncrementOperationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpUnary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); }

	'!' 

{ after(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpUnaryAccess().getTildeKeyword_2()); }

	'~' 

{ after(grammarAccess.getOpUnaryAccess().getTildeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementOperationAccess().getGroup_0()); }
(rule__PreIncrementOperation__Group_0__0)
{ after(grammarAccess.getPreIncrementOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPreIncrementOperationAccess().getPostIncrementOperationParserRuleCall_1()); }
	rulePostIncrementOperation
{ after(grammarAccess.getPreIncrementOperationAccess().getPostIncrementOperationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementOperationAccess().getGroup_0()); }
(rule__PostIncrementOperation__Group_0__0)
{ after(grammarAccess.getPostIncrementOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPostIncrementOperationAccess().getMemberFeatureCallParserRuleCall_1()); }
	ruleMemberFeatureCall
{ after(grammarAccess.getPostIncrementOperationAccess().getMemberFeatureCallParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpIncrement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpIncrementAccess().getPlusSignPlusSignKeyword_0()); }

	'++' 

{ after(grammarAccess.getOpIncrementAccess().getPlusSignPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpIncrementAccess().getHyphenMinusHyphenMinusKeyword_1()); }

	'--' 

{ after(grammarAccess.getOpIncrementAccess().getHyphenMinusHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0()); }
(rule__MemberFeatureCall__Group_1_0__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1()); }
(rule__MemberFeatureCall__Group_1_1__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2()); }
(rule__MemberFeatureCall__Group_1_2__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_3()); }
(rule__MemberFeatureCall__Group_1_3__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_0()); }
	ruleBlockExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_1()); }
	ruleParenthesizedExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getIfExpressionParserRuleCall_2()); }
	ruleIfExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getIfExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getWhileExpressionParserRuleCall_3()); }
	ruleWhileExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getWhileExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getDoWhileExpressionParserRuleCall_4()); }
	ruleDoWhileExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getDoWhileExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getForLoopExpressionParserRuleCall_5()); }
	ruleForLoopExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getForLoopExpressionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getReturnExpressionParserRuleCall_6()); }
	ruleReturnExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getReturnExpressionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getBreakExpressionParserRuleCall_7()); }
	ruleBreakExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getBreakExpressionParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getContinueExpressionParserRuleCall_8()); }
	ruleContinueExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getContinueExpressionParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getThrowExpressionParserRuleCall_9()); }
	ruleThrowExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getThrowExpressionParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getTryCatchExpressionParserRuleCall_10()); }
	ruleTryCatchExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getTryCatchExpressionParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getSwitchExpressionParserRuleCall_11()); }
	ruleSwitchExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getSwitchExpressionParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getFunctionExpressionParserRuleCall_12()); }
	ruleFunctionExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getFunctionExpressionParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_13()); }
	ruleFeatureCall
{ after(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getConstructorCallParserRuleCall_14()); }
	ruleConstructorCall
{ after(grammarAccess.getPrimaryExpressionAccess().getConstructorCallParserRuleCall_14()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_15()); }
	ruleLiteral
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionInsideBlock__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionInsideBlockAccess().getVariableDeclarationsParserRuleCall_0()); }
	ruleVariableDeclarations
{ after(grammarAccess.getExpressionInsideBlockAccess().getVariableDeclarationsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionInsideBlockAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getExpressionInsideBlockAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_0()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_1()); }
	ruleNullLiteral
{ after(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_3()); }
	ruleFloatLiteral
{ after(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_4()); }
	ruleIntLiteral
{ after(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getRegularExpressionLiteralParserRuleCall_5()); }
	ruleRegularExpressionLiteral
{ after(grammarAccess.getLiteralAccess().getRegularExpressionLiteralParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getArrayLiteralParserRuleCall_6()); }
	ruleArrayLiteral
{ after(grammarAccess.getLiteralAccess().getArrayLiteralParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getObjectLiteralParserRuleCall_7()); }
	ruleObjectLiteral
{ after(grammarAccess.getLiteralAccess().getObjectLiteralParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_0()); }

	'false' 

{ after(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralAccess().getIsTrueAssignment_1_1()); }
(rule__BooleanLiteral__IsTrueAssignment_1_1)
{ after(grammarAccess.getBooleanLiteralAccess().getIsTrueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getValueAssignment_1_0()); }
(rule__IntLiteral__ValueAssignment_1_0)
{ after(grammarAccess.getIntLiteralAccess().getValueAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getIntLiteralAccess().getHEXTerminalRuleCall_1_1()); }
	RULE_HEX
{ after(grammarAccess.getIntLiteralAccess().getHEXTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatAccess().getEFLOATTerminalRuleCall_0()); }
	RULE_EFLOAT
{ after(grammarAccess.getFloatAccess().getEFLOATTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFloatAccess().getGroup_1()); }
(rule__Float__Group_1__0)
{ after(grammarAccess.getFloatAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getFloatAccess().getGroup_2()); }
(rule__Float__Group_2__0)
{ after(grammarAccess.getFloatAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_0()); }
(	'public' 
)
{ after(grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_1()); }
(	'private' 
)
{ after(grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Package__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getGroup_0()); }
(rule__Package__Group_0__0)?
{ after(grammarAccess.getPackageAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getImportsAssignment_1()); }
(rule__Package__ImportsAssignment_1)*
{ after(grammarAccess.getPackageAccess().getImportsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__2__Impl
	rule__Package__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getUsingAssignment_2()); }
(rule__Package__UsingAssignment_2)*
{ after(grammarAccess.getPackageAccess().getUsingAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__3__Impl
	rule__Package__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getClassesAssignment_3()); }
(rule__Package__ClassesAssignment_3)*
{ after(grammarAccess.getPackageAccess().getClassesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__4__Impl
	rule__Package__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getInterfacesAssignment_4()); }
(rule__Package__InterfacesAssignment_4)*
{ after(grammarAccess.getPackageAccess().getInterfacesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__5__Impl
	rule__Package__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getEnumsAssignment_5()); }
(rule__Package__EnumsAssignment_5)*
{ after(grammarAccess.getPackageAccess().getEnumsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getTypedefsAssignment_6()); }
(rule__Package__TypedefsAssignment_6)*
{ after(grammarAccess.getPackageAccess().getTypedefsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Package__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_0__0__Impl
	rule__Package__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageKeyword_0_0()); }

	'package' 

{ after(grammarAccess.getPackageAccess().getPackageKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_0__1__Impl
	rule__Package__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameAssignment_0_1()); }
(rule__Package__NameAssignment_0_1)
{ after(grammarAccess.getPackageAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getSemicolonKeyword_0_2()); }

	';' 

{ after(grammarAccess.getPackageAccess().getSemicolonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Using__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Using__Group__0__Impl
	rule__Using__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Using__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingAccess().getUsingKeyword_0()); }

	'using' 

{ after(grammarAccess.getUsingAccess().getUsingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Using__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Using__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Using__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingAccess().getImportedClassAssignment_1()); }
(rule__Using__ImportedClassAssignment_1)
{ after(grammarAccess.getUsingAccess().getImportedClassAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getPrivateAssignment_0()); }
(rule__Class__PrivateAssignment_0)?
{ after(grammarAccess.getClassAccess().getPrivateAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassKeyword_1()); }

	'class' 

{ after(grammarAccess.getClassAccess().getClassKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameAssignment_2()); }
(rule__Class__NameAssignment_2)
{ after(grammarAccess.getClassAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__3__Impl
	rule__Class__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getTypeParametersAssignment_3()); }
(rule__Class__TypeParametersAssignment_3)?
{ after(grammarAccess.getClassAccess().getTypeParametersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__4__Impl
	rule__Class__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_4()); }
(rule__Class__Group_4__0)?
{ after(grammarAccess.getClassAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__5__Impl
	rule__Class__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_5()); }
(rule__Class__Group_5__0)*
{ after(grammarAccess.getClassAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__6__Impl
	rule__Class__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__7__Impl
	rule__Class__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getConstructorAssignment_7()); }
(rule__Class__ConstructorAssignment_7)?
{ after(grammarAccess.getClassAccess().getConstructorAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__8__Impl
	rule__Class__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getMembersAssignment_8()); }
(rule__Class__MembersAssignment_8)*
{ after(grammarAccess.getClassAccess().getMembersAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Class__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_4__0__Impl
	rule__Class__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getExtendsKeyword_4_0()); }

	'extends' 

{ after(grammarAccess.getClassAccess().getExtendsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getExtendsAssignment_4_1()); }
(rule__Class__ExtendsAssignment_4_1)
{ after(grammarAccess.getClassAccess().getExtendsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_5__0__Impl
	rule__Class__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getClassAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_5__1__Impl
	rule__Class__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getImplementsKeyword_5_1()); }

	'implements' 

{ after(grammarAccess.getClassAccess().getImplementsKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getImplementsAssignment_5_2()); }
(rule__Class__ImplementsAssignment_5_2)
{ after(grammarAccess.getClassAccess().getImplementsAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Interface__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__0__Impl
	rule__Interface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getPrivateAssignment_0()); }
(rule__Interface__PrivateAssignment_0)?
{ after(grammarAccess.getInterfaceAccess().getPrivateAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__1__Impl
	rule__Interface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getInterfaceKeyword_1()); }

	'interface' 

{ after(grammarAccess.getInterfaceAccess().getInterfaceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__2__Impl
	rule__Interface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getNameAssignment_2()); }
(rule__Interface__NameAssignment_2)
{ after(grammarAccess.getInterfaceAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__3__Impl
	rule__Interface__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getGroup_3()); }
(rule__Interface__Group_3__0)*
{ after(grammarAccess.getInterfaceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__4__Impl
	rule__Interface__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__5__Impl
	rule__Interface__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getMembersAssignment_5()); }
(rule__Interface__MembersAssignment_5)*
{ after(grammarAccess.getInterfaceAccess().getMembersAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Interface__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_3__0__Impl
	rule__Interface__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getInterfaceAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_3__1__Impl
	rule__Interface__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getImplementsKeyword_3_1()); }

	'implements' 

{ after(grammarAccess.getInterfaceAccess().getImplementsKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getImplementsAssignment_3_2()); }
(rule__Interface__ImplementsAssignment_3_2)
{ after(grammarAccess.getInterfaceAccess().getImplementsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Enum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__0__Impl
	rule__Enum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getPrivateAssignment_0()); }
(rule__Enum__PrivateAssignment_0)?
{ after(grammarAccess.getEnumAccess().getPrivateAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__1__Impl
	rule__Enum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumKeyword_1()); }

	'enum' 

{ after(grammarAccess.getEnumAccess().getEnumKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__2__Impl
	rule__Enum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getNameAssignment_2()); }
(rule__Enum__NameAssignment_2)
{ after(grammarAccess.getEnumAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__3__Impl
	rule__Enum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getTypeParametersAssignment_3()); }
(rule__Enum__TypeParametersAssignment_3)?
{ after(grammarAccess.getEnumAccess().getTypeParametersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__4__Impl
	rule__Enum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__5__Impl
	rule__Enum__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getMembersAssignment_5()); }
(rule__Enum__MembersAssignment_5)*
{ after(grammarAccess.getEnumAccess().getMembersAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__EnumConstructor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstructor__Group__0__Impl
	rule__EnumConstructor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstructor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstructorAccess().getNameAssignment_0()); }
(rule__EnumConstructor__NameAssignment_0)
{ after(grammarAccess.getEnumConstructorAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstructor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstructor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstructor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstructorAccess().getGroup_1()); }
(rule__EnumConstructor__Group_1__0)?
{ after(grammarAccess.getEnumConstructorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumConstructor__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstructor__Group_1__0__Impl
	rule__EnumConstructor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstructor__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstructorAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getEnumConstructorAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstructor__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstructor__Group_1__1__Impl
	rule__EnumConstructor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstructor__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstructorAccess().getParametersAssignment_1_1()); }
(rule__EnumConstructor__ParametersAssignment_1_1)
{ after(grammarAccess.getEnumConstructorAccess().getParametersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstructor__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstructor__Group_1__2__Impl
	rule__EnumConstructor__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstructor__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstructorAccess().getGroup_1_2()); }
(rule__EnumConstructor__Group_1_2__0)*
{ after(grammarAccess.getEnumConstructorAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstructor__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstructor__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstructor__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstructorAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getEnumConstructorAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumConstructor__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstructor__Group_1_2__0__Impl
	rule__EnumConstructor__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstructor__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstructorAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getEnumConstructorAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstructor__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstructor__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstructor__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstructorAccess().getParametersAssignment_1_2_1()); }
(rule__EnumConstructor__ParametersAssignment_1_2_1)
{ after(grammarAccess.getEnumConstructorAccess().getParametersAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Typedef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typedef__Group__0__Impl
	rule__Typedef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getPrivateAssignment_0()); }
(rule__Typedef__PrivateAssignment_0)?
{ after(grammarAccess.getTypedefAccess().getPrivateAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typedef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typedef__Group__1__Impl
	rule__Typedef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getTypedefKeyword_1()); }

	'typedef' 

{ after(grammarAccess.getTypedefAccess().getTypedefKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typedef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typedef__Group__2__Impl
	rule__Typedef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getNameAssignment_2()); }
(rule__Typedef__NameAssignment_2)
{ after(grammarAccess.getTypedefAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typedef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typedef__Group__3__Impl
	rule__Typedef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getTypedefAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typedef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typedef__Group__4__Impl
	rule__Typedef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getTypedefAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typedef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typedef__Group__5__Impl
	rule__Typedef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getGroup_5()); }
(rule__Typedef__Group_5__0)?
{ after(grammarAccess.getTypedefAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typedef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typedef__Group__6__Impl
	rule__Typedef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getMembersAssignment_6()); }
(rule__Typedef__MembersAssignment_6)*
{ after(grammarAccess.getTypedefAccess().getMembersAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typedef__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typedef__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getTypedefAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Typedef__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typedef__Group_5__0__Impl
	rule__Typedef__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getGreaterThanSignKeyword_5_0()); }

	'>' 

{ after(grammarAccess.getTypedefAccess().getGreaterThanSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typedef__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typedef__Group_5__1__Impl
	rule__Typedef__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getExtendsAssignment_5_1()); }
(rule__Typedef__ExtendsAssignment_5_1)
{ after(grammarAccess.getTypedefAccess().getExtendsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typedef__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typedef__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getCommaKeyword_5_2()); }

	',' 

{ after(grammarAccess.getTypedefAccess().getCommaKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group__0__Impl
	rule__TypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getTypeAssignment_0()); }
(rule__TypeReference__TypeAssignment_0)
{ after(grammarAccess.getTypeReferenceAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getGroup_1()); }
(rule__TypeReference__Group_1__0)?
{ after(grammarAccess.getTypeReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_1__0__Impl
	rule__TypeReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getLessThanSignKeyword_1_0()); }
(
	'<' 
)
{ after(grammarAccess.getTypeReferenceAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_1__1__Impl
	rule__TypeReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getArgumentsAssignment_1_1()); }
(rule__TypeReference__ArgumentsAssignment_1_1)
{ after(grammarAccess.getTypeReferenceAccess().getArgumentsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_1__2__Impl
	rule__TypeReference__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getGroup_1_2()); }
(rule__TypeReference__Group_1_2__0)*
{ after(grammarAccess.getTypeReferenceAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getTypeReferenceAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeReference__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_1_2__0__Impl
	rule__TypeReference__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getTypeReferenceAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getArgumentsAssignment_1_2_1()); }
(rule__TypeReference__ArgumentsAssignment_1_2_1)
{ after(grammarAccess.getTypeReferenceAccess().getArgumentsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassReference__Group__0__Impl
	rule__ClassReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassReferenceAccess().getTypeAssignment_0()); }
(rule__ClassReference__TypeAssignment_0)
{ after(grammarAccess.getClassReferenceAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassReferenceAccess().getGroup_1()); }
(rule__ClassReference__Group_1__0)?
{ after(grammarAccess.getClassReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassReference__Group_1__0__Impl
	rule__ClassReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassReferenceAccess().getLessThanSignKeyword_1_0()); }
(
	'<' 
)
{ after(grammarAccess.getClassReferenceAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassReference__Group_1__1__Impl
	rule__ClassReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassReferenceAccess().getArgumentsAssignment_1_1()); }
(rule__ClassReference__ArgumentsAssignment_1_1)
{ after(grammarAccess.getClassReferenceAccess().getArgumentsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassReference__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassReference__Group_1__2__Impl
	rule__ClassReference__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassReference__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassReferenceAccess().getGroup_1_2()); }
(rule__ClassReference__Group_1_2__0)*
{ after(grammarAccess.getClassReferenceAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassReference__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassReference__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassReference__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassReferenceAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getClassReferenceAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClassReference__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassReference__Group_1_2__0__Impl
	rule__ClassReference__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassReference__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassReferenceAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getClassReferenceAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassReference__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassReference__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassReference__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassReferenceAccess().getArgumentsAssignment_1_2_1()); }
(rule__ClassReference__ArgumentsAssignment_1_2_1)
{ after(grammarAccess.getClassReferenceAccess().getArgumentsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceReference__Group__0__Impl
	rule__InterfaceReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceReferenceAccess().getTypeAssignment_0()); }
(rule__InterfaceReference__TypeAssignment_0)
{ after(grammarAccess.getInterfaceReferenceAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceReferenceAccess().getGroup_1()); }
(rule__InterfaceReference__Group_1__0)?
{ after(grammarAccess.getInterfaceReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceReference__Group_1__0__Impl
	rule__InterfaceReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceReferenceAccess().getLessThanSignKeyword_1_0()); }
(
	'<' 
)
{ after(grammarAccess.getInterfaceReferenceAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceReference__Group_1__1__Impl
	rule__InterfaceReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceReferenceAccess().getArgumentsAssignment_1_1()); }
(rule__InterfaceReference__ArgumentsAssignment_1_1)
{ after(grammarAccess.getInterfaceReferenceAccess().getArgumentsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceReference__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceReference__Group_1__2__Impl
	rule__InterfaceReference__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceReference__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceReferenceAccess().getGroup_1_2()); }
(rule__InterfaceReference__Group_1_2__0)*
{ after(grammarAccess.getInterfaceReferenceAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceReference__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceReference__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceReference__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceReferenceAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getInterfaceReferenceAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InterfaceReference__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceReference__Group_1_2__0__Impl
	rule__InterfaceReference__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceReference__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceReferenceAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getInterfaceReferenceAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceReference__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceReference__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceReference__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceReferenceAccess().getArgumentsAssignment_1_2_1()); }
(rule__InterfaceReference__ArgumentsAssignment_1_2_1)
{ after(grammarAccess.getInterfaceReferenceAccess().getArgumentsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0()); }
(

)
{ after(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1()); }
(rule__VariableDeclaration__NameAssignment_1)
{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_2()); }
(rule__VariableDeclaration__Group_2__0)?
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_3()); }
(rule__VariableDeclaration__Group_3__0)?
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_2__0__Impl
	rule__VariableDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getVariableDeclarationAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_2_1()); }
(rule__VariableDeclaration__TypeAssignment_2_1)
{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3__0__Impl
	rule__VariableDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getExpressionAssignment_3_1()); }
(rule__VariableDeclaration__ExpressionAssignment_3_1)
{ after(grammarAccess.getVariableDeclarationAccess().getExpressionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableMemberDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group__0__Impl
	rule__VariableMemberDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getVariableMemberDeclarationAction_0()); }
(

)
{ after(grammarAccess.getVariableMemberDeclarationAccess().getVariableMemberDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableMemberDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group__1__Impl
	rule__VariableMemberDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getModifiedAssignment_1()); }
(rule__VariableMemberDeclaration__ModifiedAssignment_1)?
{ after(grammarAccess.getVariableMemberDeclarationAccess().getModifiedAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableMemberDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group__2__Impl
	rule__VariableMemberDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getVarKeyword_2()); }

	'var' 

{ after(grammarAccess.getVariableMemberDeclarationAccess().getVarKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableMemberDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group__3__Impl
	rule__VariableMemberDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getNameAssignment_3()); }
(rule__VariableMemberDeclaration__NameAssignment_3)
{ after(grammarAccess.getVariableMemberDeclarationAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableMemberDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group__4__Impl
	rule__VariableMemberDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getGroup_4()); }
(rule__VariableMemberDeclaration__Group_4__0)?
{ after(grammarAccess.getVariableMemberDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableMemberDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group__5__Impl
	rule__VariableMemberDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getColonKeyword_5()); }

	':' 

{ after(grammarAccess.getVariableMemberDeclarationAccess().getColonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableMemberDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group__6__Impl
	rule__VariableMemberDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getTypeAssignment_6()); }
(rule__VariableMemberDeclaration__TypeAssignment_6)
{ after(grammarAccess.getVariableMemberDeclarationAccess().getTypeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableMemberDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group__7__Impl
	rule__VariableMemberDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getGroup_7()); }
(rule__VariableMemberDeclaration__Group_7__0)?
{ after(grammarAccess.getVariableMemberDeclarationAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableMemberDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getSemicolonKeyword_8()); }
(
	';' 
)?
{ after(grammarAccess.getVariableMemberDeclarationAccess().getSemicolonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__VariableMemberDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group_4__0__Impl
	rule__VariableMemberDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getLeftParenthesisKeyword_4_0()); }

	'(' 

{ after(grammarAccess.getVariableMemberDeclarationAccess().getLeftParenthesisKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableMemberDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group_4__1__Impl
	rule__VariableMemberDeclaration__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getGetterAssignment_4_1()); }
(rule__VariableMemberDeclaration__GetterAssignment_4_1)
{ after(grammarAccess.getVariableMemberDeclarationAccess().getGetterAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableMemberDeclaration__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group_4__2__Impl
	rule__VariableMemberDeclaration__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getCommaKeyword_4_2()); }

	',' 

{ after(grammarAccess.getVariableMemberDeclarationAccess().getCommaKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableMemberDeclaration__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group_4__3__Impl
	rule__VariableMemberDeclaration__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getSetterAssignment_4_3()); }
(rule__VariableMemberDeclaration__SetterAssignment_4_3)
{ after(grammarAccess.getVariableMemberDeclarationAccess().getSetterAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableMemberDeclaration__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getRightParenthesisKeyword_4_4()); }

	')' 

{ after(grammarAccess.getVariableMemberDeclarationAccess().getRightParenthesisKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__VariableMemberDeclaration__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group_7__0__Impl
	rule__VariableMemberDeclaration__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getEqualsSignKeyword_7_0()); }

	'=' 

{ after(grammarAccess.getVariableMemberDeclarationAccess().getEqualsSignKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableMemberDeclaration__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableMemberDeclaration__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getExpressionAssignment_7_1()); }
(rule__VariableMemberDeclaration__ExpressionAssignment_7_1)
{ after(grammarAccess.getVariableMemberDeclarationAccess().getExpressionAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionMemberDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group__0__Impl
	rule__FunctionMemberDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getFunctionMemberDeclarationAction_0()); }
(

)
{ after(grammarAccess.getFunctionMemberDeclarationAccess().getFunctionMemberDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMemberDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group__1__Impl
	rule__FunctionMemberDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getModifiedAssignment_1()); }
(rule__FunctionMemberDeclaration__ModifiedAssignment_1)?
{ after(grammarAccess.getFunctionMemberDeclarationAccess().getModifiedAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMemberDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group__2__Impl
	rule__FunctionMemberDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getFunctionKeyword_2()); }

	'function' 

{ after(grammarAccess.getFunctionMemberDeclarationAccess().getFunctionKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMemberDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group__3__Impl
	rule__FunctionMemberDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getNameAssignment_3()); }
(rule__FunctionMemberDeclaration__NameAssignment_3)
{ after(grammarAccess.getFunctionMemberDeclarationAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMemberDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group__4__Impl
	rule__FunctionMemberDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getFunctionMemberDeclarationAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMemberDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group__5__Impl
	rule__FunctionMemberDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getGroup_5()); }
(rule__FunctionMemberDeclaration__Group_5__0)?
{ after(grammarAccess.getFunctionMemberDeclarationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMemberDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group__6__Impl
	rule__FunctionMemberDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getFunctionMemberDeclarationAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMemberDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group__7__Impl
	rule__FunctionMemberDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getGroup_7()); }
(rule__FunctionMemberDeclaration__Group_7__0)?
{ after(grammarAccess.getFunctionMemberDeclarationAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMemberDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getBodyAssignment_8()); }
(rule__FunctionMemberDeclaration__BodyAssignment_8)
{ after(grammarAccess.getFunctionMemberDeclarationAccess().getBodyAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__FunctionMemberDeclaration__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group_5__0__Impl
	rule__FunctionMemberDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getParametersAssignment_5_0()); }
(rule__FunctionMemberDeclaration__ParametersAssignment_5_0)
{ after(grammarAccess.getFunctionMemberDeclarationAccess().getParametersAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMemberDeclaration__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getGroup_5_1()); }
(rule__FunctionMemberDeclaration__Group_5_1__0)*
{ after(grammarAccess.getFunctionMemberDeclarationAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionMemberDeclaration__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group_5_1__0__Impl
	rule__FunctionMemberDeclaration__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getFunctionMemberDeclarationAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMemberDeclaration__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getParametersAssignment_5_1_1()); }
(rule__FunctionMemberDeclaration__ParametersAssignment_5_1_1)
{ after(grammarAccess.getFunctionMemberDeclarationAccess().getParametersAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionMemberDeclaration__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group_7__0__Impl
	rule__FunctionMemberDeclaration__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getColonKeyword_7_0()); }

	':' 

{ after(grammarAccess.getFunctionMemberDeclarationAccess().getColonKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMemberDeclaration__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemberDeclaration__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getReturnTypeAssignment_7_1()); }
(rule__FunctionMemberDeclaration__ReturnTypeAssignment_7_1)
{ after(grammarAccess.getFunctionMemberDeclarationAccess().getReturnTypeAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constructor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__0__Impl
	rule__Constructor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getConstructorAction_0()); }
(

)
{ after(grammarAccess.getConstructorAccess().getConstructorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__1__Impl
	rule__Constructor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getModifiedAssignment_1()); }
(rule__Constructor__ModifiedAssignment_1)?
{ after(grammarAccess.getConstructorAccess().getModifiedAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__2__Impl
	rule__Constructor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getFunctionKeyword_2()); }

	'function' 

{ after(grammarAccess.getConstructorAccess().getFunctionKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__3__Impl
	rule__Constructor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getNewKeyword_3()); }

	'new' 

{ after(grammarAccess.getConstructorAccess().getNewKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__4__Impl
	rule__Constructor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__5__Impl
	rule__Constructor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getGroup_5()); }
(rule__Constructor__Group_5__0)?
{ after(grammarAccess.getConstructorAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__6__Impl
	rule__Constructor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getConstructorAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getBodyAssignment_7()); }
(rule__Constructor__BodyAssignment_7)
{ after(grammarAccess.getConstructorAccess().getBodyAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Constructor__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_5__0__Impl
	rule__Constructor__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getParametersAssignment_5_0()); }
(rule__Constructor__ParametersAssignment_5_0)
{ after(grammarAccess.getConstructorAccess().getParametersAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getGroup_5_1()); }
(rule__Constructor__Group_5_1__0)*
{ after(grammarAccess.getConstructorAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constructor__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_5_1__0__Impl
	rule__Constructor__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getConstructorAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getParametersAssignment_5_1_1()); }
(rule__Constructor__ParametersAssignment_5_1_1)
{ after(grammarAccess.getConstructorAccess().getParametersAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FormalParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__0__Impl
	rule__FormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getOptionalAssignment_0()); }
(rule__FormalParameter__OptionalAssignment_0)?
{ after(grammarAccess.getFormalParameterAccess().getOptionalAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__1__Impl
	rule__FormalParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getNameAssignment_1()); }
(rule__FormalParameter__NameAssignment_1)
{ after(grammarAccess.getFormalParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__2__Impl
	rule__FormalParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getGroup_2()); }
(rule__FormalParameter__Group_2__0)?
{ after(grammarAccess.getFormalParameterAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getGroup_3()); }
(rule__FormalParameter__Group_3__0)?
{ after(grammarAccess.getFormalParameterAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FormalParameter__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group_2__0__Impl
	rule__FormalParameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getFormalParameterAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getTypeAssignment_2_1()); }
(rule__FormalParameter__TypeAssignment_2_1)
{ after(grammarAccess.getFormalParameterAccess().getTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FormalParameter__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group_3__0__Impl
	rule__FormalParameter__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getFormalParameterAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getDefaultValueAssignment_3_1()); }
(rule__FormalParameter__DefaultValueAssignment_3_1)
{ after(grammarAccess.getFormalParameterAccess().getDefaultValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Modifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modifier__Group__0__Impl
	rule__Modifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getModifierAction_0()); }
(

)
{ after(grammarAccess.getModifierAccess().getModifierAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Modifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getUnorderedGroup_1()); }
(rule__Modifier__UnorderedGroup_1)
{ after(grammarAccess.getModifierAccess().getUnorderedGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeParameters__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameters__Group__0__Impl
	rule__TypeParameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getTypeParametersAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameters__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameters__Group__1__Impl
	rule__TypeParameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getParametersAssignment_1()); }
(rule__TypeParameters__ParametersAssignment_1)
{ after(grammarAccess.getTypeParametersAccess().getParametersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameters__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameters__Group__2__Impl
	rule__TypeParameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getGroup_2()); }
(rule__TypeParameters__Group_2__0)*
{ after(grammarAccess.getTypeParametersAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameters__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameters__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getTypeParametersAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeParameters__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameters__Group_2__0__Impl
	rule__TypeParameters__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getTypeParametersAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameters__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameters__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getParametersAssignment_2_1()); }
(rule__TypeParameters__ParametersAssignment_2_1)
{ after(grammarAccess.getTypeParametersAccess().getParametersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameter__Group__0__Impl
	rule__TypeParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getNameAssignment_0()); }
(rule__TypeParameter__NameAssignment_0)
{ after(grammarAccess.getTypeParameterAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getGroup_1()); }
(rule__TypeParameter__Group_1__0)?
{ after(grammarAccess.getTypeParameterAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeParameter__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameter__Group_1__0__Impl
	rule__TypeParameter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getTypeParameterAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameter__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameter__Group_1__1__Impl
	rule__TypeParameter__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getTypeParameterAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameter__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameter__Group_1__2__Impl
	rule__TypeParameter__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getConstraintsAssignment_1_2()); }
(rule__TypeParameter__ConstraintsAssignment_1_2)
{ after(grammarAccess.getTypeParameterAccess().getConstraintsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameter__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameter__Group_1__3__Impl
	rule__TypeParameter__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getGroup_1_3()); }
(rule__TypeParameter__Group_1_3__0)*
{ after(grammarAccess.getTypeParameterAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameter__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameter__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getTypeParameterAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypeParameter__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameter__Group_1_3__0__Impl
	rule__TypeParameter__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getCommaKeyword_1_3_0()); }

	',' 

{ after(grammarAccess.getTypeParameterAccess().getCommaKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameter__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameter__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getConstraintsAssignment_1_3_1()); }
(rule__TypeParameter__ConstraintsAssignment_1_3_1)
{ after(grammarAccess.getTypeParameterAccess().getConstraintsAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAssignmentParserRuleCall_0()); }
	ruleAssignment
{ after(grammarAccess.getExpressionAccess().getAssignmentParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSemicolonKeyword_1()); }
(
	';' 
)?
{ after(grammarAccess.getExpressionAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0__0__Impl
	rule__Assignment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getAssignmentAction_0_0()); }
(

)
{ after(grammarAccess.getAssignmentAccess().getAssignmentAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0__1__Impl
	rule__Assignment__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getFeatureAssignment_0_1()); }
(rule__Assignment__FeatureAssignment_0_1)
{ after(grammarAccess.getAssignmentAccess().getFeatureAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0__2__Impl
	rule__Assignment__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); }
	ruleOpSingleAssign
{ after(grammarAccess.getAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getValueAssignment_0_3()); }
(rule__Assignment__ValueAssignment_0_3)
{ after(grammarAccess.getAssignmentAccess().getValueAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Assignment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__0__Impl
	rule__Assignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getOrExpressionParserRuleCall_1_0()); }
	ruleOrExpression
{ after(grammarAccess.getAssignmentAccess().getOrExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_1_1()); }
(rule__Assignment__Group_1_1__0)?
{ after(grammarAccess.getAssignmentAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1_1__0__Impl
	rule__Assignment__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_1_1_0()); }
(rule__Assignment__Group_1_1_0__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightAssignment_1_1_1()); }
(rule__Assignment__RightAssignment_1_1_1)
{ after(grammarAccess.getAssignmentAccess().getRightAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_1_1_0_0()); }
(rule__Assignment__Group_1_1_0_0__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Assignment__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1_1_0_0__0__Impl
	rule__Assignment__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getOperationLeftAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getAssignmentAccess().getOperationLeftAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getFeatureAssignment_1_1_0_0_1()); }
(rule__Assignment__FeatureAssignment_1_1_0_0_1)
{ after(grammarAccess.getAssignmentAccess().getFeatureAssignment_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1_0()); }
(rule__OrExpression__Group_1_0__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_1()); }
(rule__OrExpression__RightAssignment_1_1)
{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1_0_0()); }
(rule__OrExpression__Group_1_0_0__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OrExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1_0_0__0__Impl
	rule__OrExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperationLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getOperationLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__OrExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOtherOperatorExpressionParserRuleCall_0()); }
	ruleOtherOperatorExpression
{ after(grammarAccess.getAndExpressionAccess().getOtherOperatorExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
(rule__AndExpression__Group_1_0__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1()); }
(rule__AndExpression__RightAssignment_1_1)
{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
(rule__AndExpression__Group_1_0_0__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AndExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1_0_0__0__Impl
	rule__AndExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperationLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getOperationLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__AndExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OtherOperatorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group__0__Impl
	rule__OtherOperatorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getCompareExpressionParserRuleCall_0()); }
	ruleCompareExpression
{ after(grammarAccess.getOtherOperatorExpressionAccess().getCompareExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OtherOperatorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1()); }
(rule__OtherOperatorExpression__Group_1__0)*
{ after(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OtherOperatorExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1__0__Impl
	rule__OtherOperatorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0()); }
(rule__OtherOperatorExpression__Group_1_0__0)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OtherOperatorExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getRightAssignment_1_1()); }
(rule__OtherOperatorExpression__RightAssignment_1_1)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OtherOperatorExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0_0()); }
(rule__OtherOperatorExpression__Group_1_0_0__0)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OtherOperatorExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1_0_0__0__Impl
	rule__OtherOperatorExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getOperationLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getOperationLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OtherOperatorExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__OtherOperatorExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group__0__Impl
	rule__CompareExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getBitwiseExpressionParserRuleCall_0()); }
	ruleBitwiseExpression
{ after(grammarAccess.getCompareExpressionAccess().getBitwiseExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getGroup_1()); }
(rule__CompareExpression__Group_1__0)*
{ after(grammarAccess.getCompareExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1__0__Impl
	rule__CompareExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getGroup_1_0()); }
(rule__CompareExpression__Group_1_0__0)
{ after(grammarAccess.getCompareExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getRightAssignment_1_1()); }
(rule__CompareExpression__RightAssignment_1_1)
{ after(grammarAccess.getCompareExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getGroup_1_0_0()); }
(rule__CompareExpression__Group_1_0_0__0)
{ after(grammarAccess.getCompareExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__CompareExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1_0_0__0__Impl
	rule__CompareExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getOperationLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getCompareExpressionAccess().getOperationLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__CompareExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getCompareExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression__Group__0__Impl
	rule__BitwiseExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpressionAccess().getBitshiftExpressionParserRuleCall_0()); }
	ruleBitshiftExpression
{ after(grammarAccess.getBitwiseExpressionAccess().getBitshiftExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpressionAccess().getGroup_1()); }
(rule__BitwiseExpression__Group_1__0)*
{ after(grammarAccess.getBitwiseExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression__Group_1__0__Impl
	rule__BitwiseExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpressionAccess().getGroup_1_0()); }
(rule__BitwiseExpression__Group_1_0__0)
{ after(grammarAccess.getBitwiseExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpressionAccess().getRightAssignment_1_1()); }
(rule__BitwiseExpression__RightAssignment_1_1)
{ after(grammarAccess.getBitwiseExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpressionAccess().getGroup_1_0_0()); }
(rule__BitwiseExpression__Group_1_0_0__0)
{ after(grammarAccess.getBitwiseExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__BitwiseExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression__Group_1_0_0__0__Impl
	rule__BitwiseExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpressionAccess().getOperationLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getBitwiseExpressionAccess().getOperationLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__BitwiseExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getBitwiseExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitshiftExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitshiftExpression__Group__0__Impl
	rule__BitshiftExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitshiftExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitshiftExpressionAccess().getAddExpressionParserRuleCall_0()); }
	ruleAddExpression
{ after(grammarAccess.getBitshiftExpressionAccess().getAddExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitshiftExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitshiftExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitshiftExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitshiftExpressionAccess().getGroup_1()); }
(rule__BitshiftExpression__Group_1__0)*
{ after(grammarAccess.getBitshiftExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitshiftExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitshiftExpression__Group_1__0__Impl
	rule__BitshiftExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitshiftExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitshiftExpressionAccess().getGroup_1_0()); }
(rule__BitshiftExpression__Group_1_0__0)
{ after(grammarAccess.getBitshiftExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitshiftExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitshiftExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitshiftExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitshiftExpressionAccess().getRightAssignment_1_1()); }
(rule__BitshiftExpression__RightAssignment_1_1)
{ after(grammarAccess.getBitshiftExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitshiftExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitshiftExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitshiftExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitshiftExpressionAccess().getGroup_1_0_0()); }
(rule__BitshiftExpression__Group_1_0_0__0)
{ after(grammarAccess.getBitshiftExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__BitshiftExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitshiftExpression__Group_1_0_0__0__Impl
	rule__BitshiftExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitshiftExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitshiftExpressionAccess().getOperationLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getBitshiftExpressionAccess().getOperationLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitshiftExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitshiftExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitshiftExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitshiftExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__BitshiftExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getBitshiftExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__0__Impl
	rule__AddExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubtractExpressionParserRuleCall_0()); }
	ruleSubtractExpression
{ after(grammarAccess.getAddExpressionAccess().getSubtractExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup_1()); }
(rule__AddExpression__Group_1__0)*
{ after(grammarAccess.getAddExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__0__Impl
	rule__AddExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup_1_0()); }
(rule__AddExpression__Group_1_0__0)
{ after(grammarAccess.getAddExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getRightAssignment_1_1()); }
(rule__AddExpression__RightAssignment_1_1)
{ after(grammarAccess.getAddExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup_1_0_0()); }
(rule__AddExpression__Group_1_0_0__0)
{ after(grammarAccess.getAddExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AddExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1_0_0__0__Impl
	rule__AddExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperationLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAddExpressionAccess().getOperationLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__AddExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getAddExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubtractExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubtractExpression__Group__0__Impl
	rule__SubtractExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractExpressionAccess().getMultiplyExpressionParserRuleCall_0()); }
	ruleMultiplyExpression
{ after(grammarAccess.getSubtractExpressionAccess().getMultiplyExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubtractExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubtractExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractExpressionAccess().getGroup_1()); }
(rule__SubtractExpression__Group_1__0)*
{ after(grammarAccess.getSubtractExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubtractExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubtractExpression__Group_1__0__Impl
	rule__SubtractExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractExpressionAccess().getGroup_1_0()); }
(rule__SubtractExpression__Group_1_0__0)
{ after(grammarAccess.getSubtractExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubtractExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubtractExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractExpressionAccess().getRightAssignment_1_1()); }
(rule__SubtractExpression__RightAssignment_1_1)
{ after(grammarAccess.getSubtractExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubtractExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubtractExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractExpressionAccess().getGroup_1_0_0()); }
(rule__SubtractExpression__Group_1_0_0__0)
{ after(grammarAccess.getSubtractExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__SubtractExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubtractExpression__Group_1_0_0__0__Impl
	rule__SubtractExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractExpressionAccess().getOperationLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getSubtractExpressionAccess().getOperationLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubtractExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubtractExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__SubtractExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getSubtractExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplyExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplyExpression__Group__0__Impl
	rule__MultiplyExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplyExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplyExpressionAccess().getDivideExpressionParserRuleCall_0()); }
	ruleDivideExpression
{ after(grammarAccess.getMultiplyExpressionAccess().getDivideExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplyExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplyExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplyExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplyExpressionAccess().getGroup_1()); }
(rule__MultiplyExpression__Group_1__0)*
{ after(grammarAccess.getMultiplyExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplyExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplyExpression__Group_1__0__Impl
	rule__MultiplyExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplyExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplyExpressionAccess().getGroup_1_0()); }
(rule__MultiplyExpression__Group_1_0__0)
{ after(grammarAccess.getMultiplyExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplyExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplyExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplyExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplyExpressionAccess().getRightAssignment_1_1()); }
(rule__MultiplyExpression__RightAssignment_1_1)
{ after(grammarAccess.getMultiplyExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplyExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplyExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplyExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplyExpressionAccess().getGroup_1_0_0()); }
(rule__MultiplyExpression__Group_1_0_0__0)
{ after(grammarAccess.getMultiplyExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MultiplyExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplyExpression__Group_1_0_0__0__Impl
	rule__MultiplyExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplyExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplyExpressionAccess().getOperationLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getMultiplyExpressionAccess().getOperationLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplyExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplyExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplyExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplyExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__MultiplyExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getMultiplyExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DivideExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivideExpression__Group__0__Impl
	rule__DivideExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivideExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivideExpressionAccess().getModuloExpressionParserRuleCall_0()); }
	ruleModuloExpression
{ after(grammarAccess.getDivideExpressionAccess().getModuloExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivideExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivideExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivideExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivideExpressionAccess().getGroup_1()); }
(rule__DivideExpression__Group_1__0)*
{ after(grammarAccess.getDivideExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DivideExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivideExpression__Group_1__0__Impl
	rule__DivideExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivideExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivideExpressionAccess().getGroup_1_0()); }
(rule__DivideExpression__Group_1_0__0)
{ after(grammarAccess.getDivideExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivideExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivideExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivideExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivideExpressionAccess().getRightAssignment_1_1()); }
(rule__DivideExpression__RightAssignment_1_1)
{ after(grammarAccess.getDivideExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DivideExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivideExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivideExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivideExpressionAccess().getGroup_1_0_0()); }
(rule__DivideExpression__Group_1_0_0__0)
{ after(grammarAccess.getDivideExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__DivideExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivideExpression__Group_1_0_0__0__Impl
	rule__DivideExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivideExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivideExpressionAccess().getOperationLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getDivideExpressionAccess().getOperationLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivideExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivideExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivideExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivideExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__DivideExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getDivideExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModuloExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuloExpression__Group__0__Impl
	rule__ModuloExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuloExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuloExpressionAccess().getUnaryOperationParserRuleCall_0()); }
	ruleUnaryOperation
{ after(grammarAccess.getModuloExpressionAccess().getUnaryOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuloExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuloExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuloExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuloExpressionAccess().getGroup_1()); }
(rule__ModuloExpression__Group_1__0)*
{ after(grammarAccess.getModuloExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModuloExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuloExpression__Group_1__0__Impl
	rule__ModuloExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuloExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuloExpressionAccess().getGroup_1_0()); }
(rule__ModuloExpression__Group_1_0__0)
{ after(grammarAccess.getModuloExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuloExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuloExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuloExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuloExpressionAccess().getRightAssignment_1_1()); }
(rule__ModuloExpression__RightAssignment_1_1)
{ after(grammarAccess.getModuloExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModuloExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuloExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuloExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuloExpressionAccess().getGroup_1_0_0()); }
(rule__ModuloExpression__Group_1_0_0__0)
{ after(grammarAccess.getModuloExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ModuloExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuloExpression__Group_1_0_0__0__Impl
	rule__ModuloExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuloExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuloExpressionAccess().getOperationLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getModuloExpressionAccess().getOperationLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuloExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuloExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuloExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuloExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__ModuloExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getModuloExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperation__Group_0__0__Impl
	rule__UnaryOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getUnaryOperationAction_0_0()); }
(

)
{ after(grammarAccess.getUnaryOperationAccess().getUnaryOperationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperation__Group_0__1__Impl
	rule__UnaryOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getFeatureAssignment_0_1()); }
(rule__UnaryOperation__FeatureAssignment_0_1)
{ after(grammarAccess.getUnaryOperationAccess().getFeatureAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getOperandAssignment_0_2()); }
(rule__UnaryOperation__OperandAssignment_0_2)
{ after(grammarAccess.getUnaryOperationAccess().getOperandAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PreIncrementOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreIncrementOperation__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementOperationAccess().getGroup_0_0()); }
(rule__PreIncrementOperation__Group_0_0__0)
{ after(grammarAccess.getPreIncrementOperationAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__PreIncrementOperation__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreIncrementOperation__Group_0_0__0__Impl
	rule__PreIncrementOperation__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementOperation__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementOperationAccess().getPreIncrementOperationAction_0_0_0()); }
(

)
{ after(grammarAccess.getPreIncrementOperationAccess().getPreIncrementOperationAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PreIncrementOperation__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreIncrementOperation__Group_0_0__1__Impl
	rule__PreIncrementOperation__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementOperation__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementOperationAccess().getFeatureAssignment_0_0_1()); }
(rule__PreIncrementOperation__FeatureAssignment_0_0_1)
{ after(grammarAccess.getPreIncrementOperationAccess().getFeatureAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PreIncrementOperation__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreIncrementOperation__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementOperation__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementOperationAccess().getOperandAssignment_0_0_2()); }
(rule__PreIncrementOperation__OperandAssignment_0_0_2)
{ after(grammarAccess.getPreIncrementOperationAccess().getOperandAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PostIncrementOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostIncrementOperation__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementOperationAccess().getGroup_0_0()); }
(rule__PostIncrementOperation__Group_0_0__0)
{ after(grammarAccess.getPostIncrementOperationAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__PostIncrementOperation__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostIncrementOperation__Group_0_0__0__Impl
	rule__PostIncrementOperation__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementOperation__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementOperationAccess().getPostIncrementOperationAction_0_0_0()); }
(

)
{ after(grammarAccess.getPostIncrementOperationAccess().getPostIncrementOperationAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostIncrementOperation__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostIncrementOperation__Group_0_0__1__Impl
	rule__PostIncrementOperation__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementOperation__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementOperationAccess().getOperandAssignment_0_0_1()); }
(rule__PostIncrementOperation__OperandAssignment_0_0_1)
{ after(grammarAccess.getPostIncrementOperationAccess().getOperandAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostIncrementOperation__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostIncrementOperation__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementOperation__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementOperationAccess().getFeatureAssignment_0_0_2()); }
(rule__PostIncrementOperation__FeatureAssignment_0_0_2)
{ after(grammarAccess.getPostIncrementOperationAccess().getFeatureAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MemberFeatureCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group__0__Impl
	rule__MemberFeatureCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getMemberFeatureCallAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getAlternatives_1()); }
(rule__MemberFeatureCall__Alternatives_1)*
{ after(grammarAccess.getMemberFeatureCallAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberFeatureCall__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_0__0__Impl
	rule__MemberFeatureCall__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0_0()); }
(rule__MemberFeatureCall__Group_1_0_0__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getValueAssignment_1_0_1()); }
(rule__MemberFeatureCall__ValueAssignment_1_0_1)
{ after(grammarAccess.getMemberFeatureCallAccess().getValueAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberFeatureCall__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0_0_0()); }
(rule__MemberFeatureCall__Group_1_0_0_0__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MemberFeatureCall__Group_1_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_0_0_0__0__Impl
	rule__MemberFeatureCall__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getAssignmentAssignableAction_1_0_0_0_0()); }
(

)
{ after(grammarAccess.getMemberFeatureCallAccess().getAssignmentAssignableAction_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_0_0_0__1__Impl
	rule__MemberFeatureCall__Group_1_0_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1()); }

	'.' 

{ after(grammarAccess.getMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_0_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_0_0_0__2__Impl
	rule__MemberFeatureCall__Group_1_0_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_0_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_0_0_0_2()); }
(rule__MemberFeatureCall__FeatureAssignment_1_0_0_0_2)
{ after(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_0_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_0_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_0_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_0_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); }
	ruleOpSingleAssign
{ after(grammarAccess.getMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MemberFeatureCall__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1__0__Impl
	rule__MemberFeatureCall__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_0()); }
(rule__MemberFeatureCall__Group_1_1_0__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getValueAssignment_1_1_1()); }
(rule__MemberFeatureCall__ValueAssignment_1_1_1)
{ after(grammarAccess.getMemberFeatureCallAccess().getValueAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberFeatureCall__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_0_0()); }
(rule__MemberFeatureCall__Group_1_1_0_0__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MemberFeatureCall__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_0_0__0__Impl
	rule__MemberFeatureCall__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getArrayAssignmentAssignameAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getMemberFeatureCallAccess().getArrayAssignmentAssignameAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_0_0__1__Impl
	rule__MemberFeatureCall__Group_1_1_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getLeftSquareBracketKeyword_1_1_0_0_1()); }

	'[' 

{ after(grammarAccess.getMemberFeatureCallAccess().getLeftSquareBracketKeyword_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_0_0__2__Impl
	rule__MemberFeatureCall__Group_1_1_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_1_0_0_2()); }
(rule__MemberFeatureCall__FeatureAssignment_1_1_0_0_2)
{ after(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_1_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_0_0__3__Impl
	rule__MemberFeatureCall__Group_1_1_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getRightSquareBracketKeyword_1_1_0_0_3()); }

	']' 

{ after(grammarAccess.getMemberFeatureCallAccess().getRightSquareBracketKeyword_1_1_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1_0_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_0_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_1_0_0_4()); }
	ruleOpSingleAssign
{ after(grammarAccess.getMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_1_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MemberFeatureCall__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_2__0__Impl
	rule__MemberFeatureCall__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2_0()); }
(rule__MemberFeatureCall__Group_1_2_0__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_2__1__Impl
	rule__MemberFeatureCall__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_2_1()); }
(rule__MemberFeatureCall__FeatureAssignment_1_2_1)
{ after(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2_2()); }
(rule__MemberFeatureCall__Group_1_2_2__0)?
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MemberFeatureCall__Group_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_2_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2_0_0()); }
(rule__MemberFeatureCall__Group_1_2_0_0__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MemberFeatureCall__Group_1_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_2_0_0__0__Impl
	rule__MemberFeatureCall__Group_1_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getMemberFeatureCallTargetAction_1_2_0_0_0()); }
(

)
{ after(grammarAccess.getMemberFeatureCallAccess().getMemberFeatureCallTargetAction_1_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFullStopKeyword_1_2_0_0_1()); }

	'.' 

{ after(grammarAccess.getMemberFeatureCallAccess().getFullStopKeyword_1_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberFeatureCall__Group_1_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_2_2__0__Impl
	rule__MemberFeatureCall__Group_1_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_2_2_0()); }
(rule__MemberFeatureCall__ExplicitOperationCallAssignment_1_2_2_0)
{ after(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_2_2__1__Impl
	rule__MemberFeatureCall__Group_1_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2_2_1()); }
(rule__MemberFeatureCall__Group_1_2_2_1__0)?
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_2_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_2_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_2_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getRightParenthesisKeyword_1_2_2_2()); }

	')' 

{ after(grammarAccess.getMemberFeatureCallAccess().getRightParenthesisKeyword_1_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MemberFeatureCall__Group_1_2_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_2_2_1__0__Impl
	rule__MemberFeatureCall__Group_1_2_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_2_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getArgumentsAssignment_1_2_2_1_0()); }
(rule__MemberFeatureCall__ArgumentsAssignment_1_2_2_1_0)
{ after(grammarAccess.getMemberFeatureCallAccess().getArgumentsAssignment_1_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_2_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_2_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_2_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2_2_1_1()); }
(rule__MemberFeatureCall__Group_1_2_2_1_1__0)*
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberFeatureCall__Group_1_2_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_2_2_1_1__0__Impl
	rule__MemberFeatureCall__Group_1_2_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_2_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getCommaKeyword_1_2_2_1_1_0()); }

	',' 

{ after(grammarAccess.getMemberFeatureCallAccess().getCommaKeyword_1_2_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_2_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_2_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_2_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getArgumentsAssignment_1_2_2_1_1_1()); }
(rule__MemberFeatureCall__ArgumentsAssignment_1_2_2_1_1_1)
{ after(grammarAccess.getMemberFeatureCallAccess().getArgumentsAssignment_1_2_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberFeatureCall__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_3__0__Impl
	rule__MemberFeatureCall__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_3_0()); }
(rule__MemberFeatureCall__Group_1_3_0__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_3__1__Impl
	rule__MemberFeatureCall__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getLeftSquareBracketKeyword_1_3_1()); }

	'[' 

{ after(grammarAccess.getMemberFeatureCallAccess().getLeftSquareBracketKeyword_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_3__2__Impl
	rule__MemberFeatureCall__Group_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_3_2()); }
(rule__MemberFeatureCall__FeatureAssignment_1_3_2)
{ after(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_3__3__Impl
	rule__MemberFeatureCall__Group_1_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getRightSquareBracketKeyword_1_3_3()); }

	']' 

{ after(grammarAccess.getMemberFeatureCallAccess().getRightSquareBracketKeyword_1_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_3_4()); }
(rule__MemberFeatureCall__Group_1_3_4__0)?
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MemberFeatureCall__Group_1_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_3_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getArrayAccessTargetAction_1_3_0_0()); }
(

)
{ after(grammarAccess.getMemberFeatureCallAccess().getArrayAccessTargetAction_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MemberFeatureCall__Group_1_3_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_3_4__0__Impl
	rule__MemberFeatureCall__Group_1_3_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_3_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_3_4_0()); }
(rule__MemberFeatureCall__ExplicitOperationCallAssignment_1_3_4_0)
{ after(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_3_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_3_4__1__Impl
	rule__MemberFeatureCall__Group_1_3_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_3_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_3_4_1()); }
(rule__MemberFeatureCall__Group_1_3_4_1__0)?
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_3_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_3_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_3_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_3_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getRightParenthesisKeyword_1_3_4_2()); }

	')' 

{ after(grammarAccess.getMemberFeatureCallAccess().getRightParenthesisKeyword_1_3_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MemberFeatureCall__Group_1_3_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_3_4_1__0__Impl
	rule__MemberFeatureCall__Group_1_3_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_3_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getArgumentsAssignment_1_3_4_1_0()); }
(rule__MemberFeatureCall__ArgumentsAssignment_1_3_4_1_0)
{ after(grammarAccess.getMemberFeatureCallAccess().getArgumentsAssignment_1_3_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_3_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_3_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_3_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_3_4_1_1()); }
(rule__MemberFeatureCall__Group_1_3_4_1_1__0)*
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_3_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberFeatureCall__Group_1_3_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_3_4_1_1__0__Impl
	rule__MemberFeatureCall__Group_1_3_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_3_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getCommaKeyword_1_3_4_1_1_0()); }

	',' 

{ after(grammarAccess.getMemberFeatureCallAccess().getCommaKeyword_1_3_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_3_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_3_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_3_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getArgumentsAssignment_1_3_4_1_1_1()); }
(rule__MemberFeatureCall__ArgumentsAssignment_1_3_4_1_1_1)
{ after(grammarAccess.getMemberFeatureCallAccess().getArgumentsAssignment_1_3_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BlockExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group__0__Impl
	rule__BlockExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getBlockExpressionAction_0()); }
(

)
{ after(grammarAccess.getBlockExpressionAccess().getBlockExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group__1__Impl
	rule__BlockExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group__2__Impl
	rule__BlockExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getGroup_2()); }
(rule__BlockExpression__Group_2__0)*
{ after(grammarAccess.getBlockExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BlockExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group_2__0__Impl
	rule__BlockExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0()); }
(rule__BlockExpression__ExpressionsAssignment_2_0)
{ after(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1()); }
(
	';' 
)?
{ after(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarations__Group__0__Impl
	rule__VariableDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationsAccess().getVariableDeclarationsAction_0()); }
(

)
{ after(grammarAccess.getVariableDeclarationsAccess().getVariableDeclarationsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarations__Group__1__Impl
	rule__VariableDeclarations__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationsAccess().getVarKeyword_1()); }

	'var' 

{ after(grammarAccess.getVariableDeclarationsAccess().getVarKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarations__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarations__Group__2__Impl
	rule__VariableDeclarations__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarations__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationsAccess().getDeclarationsAssignment_2()); }
(rule__VariableDeclarations__DeclarationsAssignment_2)
{ after(grammarAccess.getVariableDeclarationsAccess().getDeclarationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarations__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarations__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarations__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationsAccess().getGroup_3()); }
(rule__VariableDeclarations__Group_3__0)*
{ after(grammarAccess.getVariableDeclarationsAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDeclarations__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarations__Group_3__0__Impl
	rule__VariableDeclarations__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarations__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationsAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getVariableDeclarationsAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarations__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarations__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarations__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationsAccess().getDeclarationsAssignment_3_1()); }
(rule__VariableDeclarations__DeclarationsAssignment_3_1)
{ after(grammarAccess.getVariableDeclarationsAccess().getDeclarationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__0__Impl
	rule__ParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__1__Impl
	rule__ParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__0__Impl
	rule__IfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfExpressionAction_0()); }
(

)
{ after(grammarAccess.getIfExpressionAccess().getIfExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__1__Impl
	rule__IfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__2__Impl
	rule__IfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__3__Impl
	rule__IfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfAssignment_3()); }
(rule__IfExpression__IfAssignment_3)
{ after(grammarAccess.getIfExpressionAccess().getIfAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__4__Impl
	rule__IfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__5__Impl
	rule__IfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getThenAssignment_5()); }
(rule__IfExpression__ThenAssignment_5)
{ after(grammarAccess.getIfExpressionAccess().getThenAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getGroup_6()); }
(rule__IfExpression__Group_6__0)?
{ after(grammarAccess.getIfExpressionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__IfExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group_6__0__Impl
	rule__IfExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseKeyword_6_0()); }
(
	'else' 
)
{ after(grammarAccess.getIfExpressionAccess().getElseKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseAssignment_6_1()); }
(rule__IfExpression__ElseAssignment_6_1)
{ after(grammarAccess.getIfExpressionAccess().getElseAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WhileExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileExpression__Group__0__Impl
	rule__WhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getWhileExpressionAction_0()); }
(

)
{ after(grammarAccess.getWhileExpressionAccess().getWhileExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileExpression__Group__1__Impl
	rule__WhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getWhileKeyword_1()); }

	'while' 

{ after(grammarAccess.getWhileExpressionAccess().getWhileKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileExpression__Group__2__Impl
	rule__WhileExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getWhileExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileExpression__Group__3__Impl
	rule__WhileExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getPredicateAssignment_3()); }
(rule__WhileExpression__PredicateAssignment_3)
{ after(grammarAccess.getWhileExpressionAccess().getPredicateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileExpression__Group__4__Impl
	rule__WhileExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getWhileExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getBodyAssignment_5()); }
(rule__WhileExpression__BodyAssignment_5)
{ after(grammarAccess.getWhileExpressionAccess().getBodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DoWhileExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileExpression__Group__0__Impl
	rule__DoWhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getDoWhileExpressionAction_0()); }
(

)
{ after(grammarAccess.getDoWhileExpressionAccess().getDoWhileExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileExpression__Group__1__Impl
	rule__DoWhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getDoKeyword_1()); }

	'do' 

{ after(grammarAccess.getDoWhileExpressionAccess().getDoKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileExpression__Group__2__Impl
	rule__DoWhileExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getBodyAssignment_2()); }
(rule__DoWhileExpression__BodyAssignment_2)
{ after(grammarAccess.getDoWhileExpressionAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileExpression__Group__3__Impl
	rule__DoWhileExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getWhileKeyword_3()); }

	'while' 

{ after(grammarAccess.getDoWhileExpressionAccess().getWhileKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileExpression__Group__4__Impl
	rule__DoWhileExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getDoWhileExpressionAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileExpression__Group__5__Impl
	rule__DoWhileExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getPredicateAssignment_5()); }
(rule__DoWhileExpression__PredicateAssignment_5)
{ after(grammarAccess.getDoWhileExpressionAccess().getPredicateAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getDoWhileExpressionAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ForLoopExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group__0__Impl
	rule__ForLoopExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getForLoopExpressionAction_0()); }
(

)
{ after(grammarAccess.getForLoopExpressionAccess().getForLoopExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group__1__Impl
	rule__ForLoopExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getGroup_1()); }
(rule__ForLoopExpression__Group_1__0)
{ after(grammarAccess.getForLoopExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getBodyAssignment_2()); }
(rule__ForLoopExpression__BodyAssignment_2)
{ after(grammarAccess.getForLoopExpressionAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForLoopExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getGroup_1_0()); }
(rule__ForLoopExpression__Group_1_0__0)
{ after(grammarAccess.getForLoopExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ForLoopExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group_1_0__0__Impl
	rule__ForLoopExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getForKeyword_1_0_0()); }

	'for' 

{ after(grammarAccess.getForLoopExpressionAccess().getForKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group_1_0__1__Impl
	rule__ForLoopExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getLeftParenthesisKeyword_1_0_1()); }

	'(' 

{ after(grammarAccess.getForLoopExpressionAccess().getLeftParenthesisKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopExpression__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group_1_0__2__Impl
	rule__ForLoopExpression__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getDeclaredParamAssignment_1_0_2()); }
(rule__ForLoopExpression__DeclaredParamAssignment_1_0_2)
{ after(grammarAccess.getForLoopExpressionAccess().getDeclaredParamAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopExpression__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group_1_0__3__Impl
	rule__ForLoopExpression__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getInKeyword_1_0_3()); }

	'in' 

{ after(grammarAccess.getForLoopExpressionAccess().getInKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopExpression__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group_1_0__4__Impl
	rule__ForLoopExpression__Group_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getForExpressionAssignment_1_0_4()); }
(rule__ForLoopExpression__ForExpressionAssignment_1_0_4)
{ after(grammarAccess.getForLoopExpressionAccess().getForExpressionAssignment_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopExpression__Group_1_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group_1_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group_1_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getRightParenthesisKeyword_1_0_5()); }

	')' 

{ after(grammarAccess.getForLoopExpressionAccess().getRightParenthesisKeyword_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ReturnExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnExpression__Group__0__Impl
	rule__ReturnExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnExpressionAccess().getReturnExpressionAction_0()); }
(

)
{ after(grammarAccess.getReturnExpressionAccess().getReturnExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnExpression__Group__1__Impl
	rule__ReturnExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnExpressionAccess().getReturnKeyword_1()); }

	'return' 

{ after(grammarAccess.getReturnExpressionAccess().getReturnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnExpressionAccess().getExpressionAssignment_2()); }
(rule__ReturnExpression__ExpressionAssignment_2)?
{ after(grammarAccess.getReturnExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BreakExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakExpression__Group__0__Impl
	rule__BreakExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakExpressionAccess().getBreakExpressionAction_0()); }
(

)
{ after(grammarAccess.getBreakExpressionAccess().getBreakExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BreakExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakExpressionAccess().getBreakKeyword_1()); }

	'break' 

{ after(grammarAccess.getBreakExpressionAccess().getBreakKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContinueExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContinueExpression__Group__0__Impl
	rule__ContinueExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContinueExpressionAccess().getBreakExpressionAction_0()); }
(

)
{ after(grammarAccess.getContinueExpressionAccess().getBreakExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContinueExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContinueExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContinueExpressionAccess().getContinueKeyword_1()); }

	'continue' 

{ after(grammarAccess.getContinueExpressionAccess().getContinueKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ThrowExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThrowExpression__Group__0__Impl
	rule__ThrowExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowExpressionAccess().getThrowExpressionAction_0()); }
(

)
{ after(grammarAccess.getThrowExpressionAccess().getThrowExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThrowExpression__Group__1__Impl
	rule__ThrowExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowExpressionAccess().getThrowKeyword_1()); }

	'throw' 

{ after(grammarAccess.getThrowExpressionAccess().getThrowKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThrowExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowExpressionAccess().getExpressionAssignment_2()); }
(rule__ThrowExpression__ExpressionAssignment_2)
{ after(grammarAccess.getThrowExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TryCatchExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryCatchExpression__Group__0__Impl
	rule__TryCatchExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getTryCatchExpressionAction_0()); }
(

)
{ after(grammarAccess.getTryCatchExpressionAccess().getTryCatchExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryCatchExpression__Group__1__Impl
	rule__TryCatchExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getTryKeyword_1()); }

	'try' 

{ after(grammarAccess.getTryCatchExpressionAccess().getTryKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryCatchExpression__Group__2__Impl
	rule__TryCatchExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getExpressionAssignment_2()); }
(rule__TryCatchExpression__ExpressionAssignment_2)
{ after(grammarAccess.getTryCatchExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryCatchExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTryCatchExpressionAccess().getCatchClausesAssignment_3()); }
(rule__TryCatchExpression__CatchClausesAssignment_3)
{ after(grammarAccess.getTryCatchExpressionAccess().getCatchClausesAssignment_3()); }
)
(
{ before(grammarAccess.getTryCatchExpressionAccess().getCatchClausesAssignment_3()); }
(rule__TryCatchExpression__CatchClausesAssignment_3)*
{ after(grammarAccess.getTryCatchExpressionAccess().getCatchClausesAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CatchClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CatchClause__Group__0__Impl
	rule__CatchClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClauseAccess().getCatchKeyword_0()); }
(
	'catch' 
)
{ after(grammarAccess.getCatchClauseAccess().getCatchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CatchClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CatchClause__Group__1__Impl
	rule__CatchClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClauseAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getCatchClauseAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CatchClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CatchClause__Group__2__Impl
	rule__CatchClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClauseAccess().getDeclaredParamAssignment_2()); }
(rule__CatchClause__DeclaredParamAssignment_2)
{ after(grammarAccess.getCatchClauseAccess().getDeclaredParamAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CatchClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CatchClause__Group__3__Impl
	rule__CatchClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClauseAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getCatchClauseAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CatchClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CatchClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClauseAccess().getExpressionAssignment_4()); }
(rule__CatchClause__ExpressionAssignment_4)
{ after(grammarAccess.getCatchClauseAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SwitchExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__0__Impl
	rule__SwitchExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionAction_0()); }
(

)
{ after(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__1__Impl
	rule__SwitchExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchKeyword_1()); }

	'switch' 

{ after(grammarAccess.getSwitchExpressionAccess().getSwitchKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__2__Impl
	rule__SwitchExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchAssignment_2()); }
(rule__SwitchExpression__SwitchAssignment_2)
{ after(grammarAccess.getSwitchExpressionAccess().getSwitchAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__3__Impl
	rule__SwitchExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getSwitchExpressionAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__4__Impl
	rule__SwitchExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_4()); }
(rule__SwitchExpression__CasesAssignment_4)
{ after(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_4()); }
)
(
{ before(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_4()); }
(rule__SwitchExpression__CasesAssignment_4)*
{ after(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__5__Impl
	rule__SwitchExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getGroup_5()); }
(rule__SwitchExpression__Group_5__0)?
{ after(grammarAccess.getSwitchExpressionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getSwitchExpressionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SwitchExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_5__0__Impl
	rule__SwitchExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDefaultKeyword_5_0()); }

	'default' 

{ after(grammarAccess.getSwitchExpressionAccess().getDefaultKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_5__1__Impl
	rule__SwitchExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getColonKeyword_5_1()); }

	':' 

{ after(grammarAccess.getSwitchExpressionAccess().getColonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDefaultAssignment_5_2()); }
(rule__SwitchExpression__DefaultAssignment_5_2)
{ after(grammarAccess.getSwitchExpressionAccess().getDefaultAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CasePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group__0__Impl
	rule__CasePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getCaseKeyword_0()); }
(
	'case' 
)
{ after(grammarAccess.getCasePartAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CasePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group__1__Impl
	rule__CasePart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getCasesAssignment_1()); }
(rule__CasePart__CasesAssignment_1)
{ after(grammarAccess.getCasePartAccess().getCasesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CasePart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group__2__Impl
	rule__CasePart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getGroup_2()); }
(rule__CasePart__Group_2__0)?
{ after(grammarAccess.getCasePartAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CasePart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group__3__Impl
	rule__CasePart__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getCasePartAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CasePart__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getThenAssignment_4()); }
(rule__CasePart__ThenAssignment_4)
{ after(grammarAccess.getCasePartAccess().getThenAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CasePart__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group_2__0__Impl
	rule__CasePart__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getCasePartAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CasePart__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getCasesAssignment_2_1()); }
(rule__CasePart__CasesAssignment_2_1)
{ after(grammarAccess.getCasePartAccess().getCasesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__0__Impl
	rule__FunctionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getFunctionExpressionAction_0()); }
(

)
{ after(grammarAccess.getFunctionExpressionAccess().getFunctionExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__1__Impl
	rule__FunctionExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getFunctionKeyword_1()); }

	'function' 

{ after(grammarAccess.getFunctionExpressionAccess().getFunctionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__2__Impl
	rule__FunctionExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFunctionExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__3__Impl
	rule__FunctionExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getGroup_3()); }
(rule__FunctionExpression__Group_3__0)?
{ after(grammarAccess.getFunctionExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__4__Impl
	rule__FunctionExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFunctionExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__5__Impl
	rule__FunctionExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getGroup_5()); }
(rule__FunctionExpression__Group_5__0)?
{ after(grammarAccess.getFunctionExpressionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getBodyAssignment_6()); }
(rule__FunctionExpression__BodyAssignment_6)
{ after(grammarAccess.getFunctionExpressionAccess().getBodyAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__FunctionExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group_3__0__Impl
	rule__FunctionExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getParametersAssignment_3_0()); }
(rule__FunctionExpression__ParametersAssignment_3_0)
{ after(grammarAccess.getFunctionExpressionAccess().getParametersAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getGroup_3_1()); }
(rule__FunctionExpression__Group_3_1__0)*
{ after(grammarAccess.getFunctionExpressionAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionExpression__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group_3_1__0__Impl
	rule__FunctionExpression__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getFunctionExpressionAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getParametersAssignment_3_1_1()); }
(rule__FunctionExpression__ParametersAssignment_3_1_1)
{ after(grammarAccess.getFunctionExpressionAccess().getParametersAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group_5__0__Impl
	rule__FunctionExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getColonKeyword_5_0()); }

	':' 

{ after(grammarAccess.getFunctionExpressionAccess().getColonKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getReturnTypeAssignment_5_1()); }
(rule__FunctionExpression__ReturnTypeAssignment_5_1)
{ after(grammarAccess.getFunctionExpressionAccess().getReturnTypeAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FeatureCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group__0__Impl
	rule__FeatureCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureCallAction_0()); }
(

)
{ after(grammarAccess.getFeatureCallAccess().getFeatureCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group__1__Impl
	rule__FeatureCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureAssignment_1()); }
(rule__FeatureCall__FeatureAssignment_1)
{ after(grammarAccess.getFeatureCallAccess().getFeatureAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getGroup_2()); }
(rule__FeatureCall__Group_2__0)?
{ after(grammarAccess.getFeatureCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FeatureCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_2__0__Impl
	rule__FeatureCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getExplicitOperationCallAssignment_2_0()); }
(rule__FeatureCall__ExplicitOperationCallAssignment_2_0)
{ after(grammarAccess.getFeatureCallAccess().getExplicitOperationCallAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_2__1__Impl
	rule__FeatureCall__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getArgumentsAssignment_2_1()); }
(rule__FeatureCall__ArgumentsAssignment_2_1)?
{ after(grammarAccess.getFeatureCallAccess().getArgumentsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_2__2__Impl
	rule__FeatureCall__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getGroup_2_2()); }
(rule__FeatureCall__Group_2_2__0)*
{ after(grammarAccess.getFeatureCallAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getFeatureCallAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FeatureCall__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_2_2__0__Impl
	rule__FeatureCall__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getFeatureCallAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getArgumentsAssignment_2_2_1()); }
(rule__FeatureCall__ArgumentsAssignment_2_2_1)
{ after(grammarAccess.getFeatureCallAccess().getArgumentsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstructorCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group__0__Impl
	rule__ConstructorCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getConstructorCallAction_0()); }
(

)
{ after(grammarAccess.getConstructorCallAccess().getConstructorCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group__1__Impl
	rule__ConstructorCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getNewKeyword_1()); }

	'new' 

{ after(grammarAccess.getConstructorCallAccess().getNewKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group__2__Impl
	rule__ConstructorCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getConstructorAssignment_2()); }
(rule__ConstructorCall__ConstructorAssignment_2)
{ after(grammarAccess.getConstructorCallAccess().getConstructorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group__3__Impl
	rule__ConstructorCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getConstructorCallAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group__4__Impl
	rule__ConstructorCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_4()); }
(rule__ConstructorCall__ArgumentsAssignment_4)?
{ after(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group__5__Impl
	rule__ConstructorCall__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getGroup_5()); }
(rule__ConstructorCall__Group_5__0)*
{ after(grammarAccess.getConstructorCallAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getConstructorCallAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ConstructorCall__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_5__0__Impl
	rule__ConstructorCall__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getConstructorCallAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_5_1()); }
(rule__ConstructorCall__ArgumentsAssignment_5_1)
{ after(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__0__Impl
	rule__BooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
(rule__BooleanLiteral__Alternatives_1)
{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NullLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullLiteral__Group__0__Impl
	rule__NullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
(

)
{ after(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntLiteral__Group__0__Impl
	rule__IntLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getIntLiteralAction_0()); }
(

)
{ after(grammarAccess.getIntLiteralAccess().getIntLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getAlternatives_1()); }
(rule__IntLiteral__Alternatives_1)
{ after(grammarAccess.getIntLiteralAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FloatLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatLiteral__Group__0__Impl
	rule__FloatLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getFloatLiteralAction_0()); }
(

)
{ after(grammarAccess.getFloatLiteralAccess().getFloatLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloatLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getValueAssignment_1()); }
(rule__FloatLiteral__ValueAssignment_1)
{ after(grammarAccess.getFloatLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__0__Impl
	rule__StringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
(

)
{ after(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
(rule__StringLiteral__ValueAssignment_1)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegularExpressionLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularExpressionLiteral__Group__0__Impl
	rule__RegularExpressionLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularExpressionLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularExpressionLiteralAccess().getRegularExpressionLiteralAction_0()); }
(

)
{ after(grammarAccess.getRegularExpressionLiteralAccess().getRegularExpressionLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularExpressionLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularExpressionLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularExpressionLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularExpressionLiteralAccess().getValueAssignment_1()); }
(rule__RegularExpressionLiteral__ValueAssignment_1)
{ after(grammarAccess.getRegularExpressionLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__0__Impl
	rule__ArrayLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getArrayLiteralAction_0()); }
(

)
{ after(grammarAccess.getArrayLiteralAccess().getArrayLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__1__Impl
	rule__ArrayLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getArrayLiteralAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__2__Impl
	rule__ArrayLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getElementsAssignment_2()); }
(rule__ArrayLiteral__ElementsAssignment_2)?
{ after(grammarAccess.getArrayLiteralAccess().getElementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__3__Impl
	rule__ArrayLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getGroup_3()); }
(rule__ArrayLiteral__Group_3__0)*
{ after(grammarAccess.getArrayLiteralAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getArrayLiteralAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArrayLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group_3__0__Impl
	rule__ArrayLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getArrayLiteralAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getElementsAssignment_3_1()); }
(rule__ArrayLiteral__ElementsAssignment_3_1)
{ after(grammarAccess.getArrayLiteralAccess().getElementsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectLiteral__Group__0__Impl
	rule__ObjectLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectLiteralAccess().getObjectLiteralAction_0()); }
(

)
{ after(grammarAccess.getObjectLiteralAccess().getObjectLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectLiteral__Group__1__Impl
	rule__ObjectLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectLiteralAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getObjectLiteralAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectLiteral__Group__2__Impl
	rule__ObjectLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectLiteralAccess().getElementsAssignment_2()); }
(rule__ObjectLiteral__ElementsAssignment_2)
{ after(grammarAccess.getObjectLiteralAccess().getElementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectLiteral__Group__3__Impl
	rule__ObjectLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectLiteralAccess().getGroup_3()); }
(rule__ObjectLiteral__Group_3__0)*
{ after(grammarAccess.getObjectLiteralAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectLiteralAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getObjectLiteralAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ObjectLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectLiteral__Group_3__0__Impl
	rule__ObjectLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectLiteralAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getObjectLiteralAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectLiteralAccess().getElementsAssignment_3_1()); }
(rule__ObjectLiteral__ElementsAssignment_3_1)
{ after(grammarAccess.getObjectLiteralAccess().getElementsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectElement__Group__0__Impl
	rule__ObjectElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectElementAccess().getKeyAssignment_0()); }
(rule__ObjectElement__KeyAssignment_0)
{ after(grammarAccess.getObjectElementAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectElement__Group__1__Impl
	rule__ObjectElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectElementAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getObjectElementAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectElementAccess().getValueAssignment_2()); }
(rule__ObjectElement__ValueAssignment_2)
{ after(grammarAccess.getObjectElementAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Float__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Float__Group_1__0__Impl
	rule__Float__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getFloatAccess().getINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Float__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Float__Group_1__1__Impl
	rule__Float__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getFloatAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Float__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Float__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatAccess().getINTTerminalRuleCall_1_2()); }
	RULE_INT
{ after(grammarAccess.getFloatAccess().getINTTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Float__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Float__Group_2__0__Impl
	rule__Float__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatAccess().getFullStopKeyword_2_0()); }

	'.' 

{ after(grammarAccess.getFloatAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Float__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Float__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
{ after(grammarAccess.getFloatAccess().getINTTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Modifier__UnorderedGroup_1
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getModifierAccess().getUnorderedGroup_1());
    }
:
	rule__Modifier__UnorderedGroup_1__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getModifierAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}


rule__Modifier__UnorderedGroup_1__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModifierAccess().getUnorderedGroup_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModifierAccess().getUnorderedGroup_1(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getModifierAccess().getStaticAssignment_1_0()); }
						(rule__Modifier__StaticAssignment_1_0)
						{ after(grammarAccess.getModifierAccess().getStaticAssignment_1_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModifierAccess().getUnorderedGroup_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModifierAccess().getUnorderedGroup_1(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getModifierAccess().getFinalAssignment_1_1()); }
						(rule__Modifier__FinalAssignment_1_1)
						{ after(grammarAccess.getModifierAccess().getFinalAssignment_1_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModifierAccess().getUnorderedGroup_1(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModifierAccess().getUnorderedGroup_1(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getModifierAccess().getDynamicAssignment_1_2()); }
						(rule__Modifier__DynamicAssignment_1_2)
						{ after(grammarAccess.getModifierAccess().getDynamicAssignment_1_2()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModifierAccess().getUnorderedGroup_1(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModifierAccess().getUnorderedGroup_1(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getModifierAccess().getOverrideAssignment_1_3()); }
						(rule__Modifier__OverrideAssignment_1_3)
						{ after(grammarAccess.getModifierAccess().getOverrideAssignment_1_3()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModifierAccess().getUnorderedGroup_1(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModifierAccess().getUnorderedGroup_1(), 4);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getModifierAccess().getInlineAssignment_1_4()); }
						(rule__Modifier__InlineAssignment_1_4)
						{ after(grammarAccess.getModifierAccess().getInlineAssignment_1_4()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModifierAccess().getUnorderedGroup_1(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModifierAccess().getUnorderedGroup_1(), 5);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getModifierAccess().getVisibilityAssignment_1_5()); }
						(rule__Modifier__VisibilityAssignment_1_5)
						{ after(grammarAccess.getModifierAccess().getVisibilityAssignment_1_5()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModifierAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}


rule__Modifier__UnorderedGroup_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modifier__UnorderedGroup_1__Impl
	rule__Modifier__UnorderedGroup_1__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Modifier__UnorderedGroup_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modifier__UnorderedGroup_1__Impl
	rule__Modifier__UnorderedGroup_1__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Modifier__UnorderedGroup_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modifier__UnorderedGroup_1__Impl
	rule__Modifier__UnorderedGroup_1__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__Modifier__UnorderedGroup_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modifier__UnorderedGroup_1__Impl
	rule__Modifier__UnorderedGroup_1__4?
;
finally {
	restoreStackSize(stackSize);
}


rule__Modifier__UnorderedGroup_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modifier__UnorderedGroup_1__Impl
	rule__Modifier__UnorderedGroup_1__5?
;
finally {
	restoreStackSize(stackSize);
}


rule__Modifier__UnorderedGroup_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modifier__UnorderedGroup_1__Impl
;
finally {
	restoreStackSize(stackSize);
}














rule__Package__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameQualifiedNameParserRuleCall_0_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPackageAccess().getNameQualifiedNameParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ImportsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getImportsImportParserRuleCall_1_0()); }
	ruleImport{ after(grammarAccess.getPackageAccess().getImportsImportParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__UsingAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getUsingUsingParserRuleCall_2_0()); }
	ruleUsing{ after(grammarAccess.getPackageAccess().getUsingUsingParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ClassesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getClassesClassParserRuleCall_3_0()); }
	ruleClass{ after(grammarAccess.getPackageAccess().getClassesClassParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__InterfacesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getInterfacesInterfaceParserRuleCall_4_0()); }
	ruleInterface{ after(grammarAccess.getPackageAccess().getInterfacesInterfaceParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__EnumsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getEnumsEnumParserRuleCall_5_0()); }
	ruleEnum{ after(grammarAccess.getPackageAccess().getEnumsEnumParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__TypedefsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getTypedefsTypedefParserRuleCall_6_0()); }
	ruleTypedef{ after(grammarAccess.getPackageAccess().getTypedefsTypedefParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Using__ImportedClassAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingAccess().getImportedClassQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getUsingAccess().getImportedClassQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__PrivateAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getPrivatePrivateKeyword_0_0()); }
(
{ before(grammarAccess.getClassAccess().getPrivatePrivateKeyword_0_0()); }

	'private' 

{ after(grammarAccess.getClassAccess().getPrivatePrivateKeyword_0_0()); }
)

{ after(grammarAccess.getClassAccess().getPrivatePrivateKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameValidIDParserRuleCall_2_0()); }
	ruleValidID{ after(grammarAccess.getClassAccess().getNameValidIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__TypeParametersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getTypeParametersTypeParametersParserRuleCall_3_0()); }
	ruleTypeParameters{ after(grammarAccess.getClassAccess().getTypeParametersTypeParametersParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ExtendsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getExtendsClassReferenceParserRuleCall_4_1_0()); }
	ruleClassReference{ after(grammarAccess.getClassAccess().getExtendsClassReferenceParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ImplementsAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getImplementsClassOrInterfaceReferenceParserRuleCall_5_2_0()); }
	ruleClassOrInterfaceReference{ after(grammarAccess.getClassAccess().getImplementsClassOrInterfaceReferenceParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ConstructorAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getConstructorConstructorParserRuleCall_7_0()); }
	ruleConstructor{ after(grammarAccess.getClassAccess().getConstructorConstructorParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__MembersAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getMembersClassMemberParserRuleCall_8_0()); }
	ruleClassMember{ after(grammarAccess.getClassAccess().getMembersClassMemberParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__PrivateAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getPrivatePrivateKeyword_0_0()); }
(
{ before(grammarAccess.getInterfaceAccess().getPrivatePrivateKeyword_0_0()); }

	'private' 

{ after(grammarAccess.getInterfaceAccess().getPrivatePrivateKeyword_0_0()); }
)

{ after(grammarAccess.getInterfaceAccess().getPrivatePrivateKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getNameValidIDParserRuleCall_2_0()); }
	ruleValidID{ after(grammarAccess.getInterfaceAccess().getNameValidIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__ImplementsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getImplementsInterfaceReferenceParserRuleCall_3_2_0()); }
	ruleInterfaceReference{ after(grammarAccess.getInterfaceAccess().getImplementsInterfaceReferenceParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__MembersAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getMembersClassMemberParserRuleCall_5_0()); }
	ruleClassMember{ after(grammarAccess.getInterfaceAccess().getMembersClassMemberParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__PrivateAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getPrivatePrivateKeyword_0_0()); }
(
{ before(grammarAccess.getEnumAccess().getPrivatePrivateKeyword_0_0()); }

	'private' 

{ after(grammarAccess.getEnumAccess().getPrivatePrivateKeyword_0_0()); }
)

{ after(grammarAccess.getEnumAccess().getPrivatePrivateKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getNameValidIDParserRuleCall_2_0()); }
	ruleValidID{ after(grammarAccess.getEnumAccess().getNameValidIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__TypeParametersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getTypeParametersTypeParametersParserRuleCall_3_0()); }
	ruleTypeParameters{ after(grammarAccess.getEnumAccess().getTypeParametersTypeParametersParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__MembersAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getMembersEnumConstructorParserRuleCall_5_0()); }
	ruleEnumConstructor{ after(grammarAccess.getEnumAccess().getMembersEnumConstructorParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstructor__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstructorAccess().getNameValidIDParserRuleCall_0_0()); }
	ruleValidID{ after(grammarAccess.getEnumConstructorAccess().getNameValidIDParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstructor__ParametersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstructorAccess().getParametersFormalParameterParserRuleCall_1_1_0()); }
	ruleFormalParameter{ after(grammarAccess.getEnumConstructorAccess().getParametersFormalParameterParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstructor__ParametersAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstructorAccess().getParametersFormalParameterParserRuleCall_1_2_1_0()); }
	ruleFormalParameter{ after(grammarAccess.getEnumConstructorAccess().getParametersFormalParameterParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__PrivateAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getPrivatePrivateKeyword_0_0()); }
(
{ before(grammarAccess.getTypedefAccess().getPrivatePrivateKeyword_0_0()); }

	'private' 

{ after(grammarAccess.getTypedefAccess().getPrivatePrivateKeyword_0_0()); }
)

{ after(grammarAccess.getTypedefAccess().getPrivatePrivateKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getNameValidIDParserRuleCall_2_0()); }
	ruleValidID{ after(grammarAccess.getTypedefAccess().getNameValidIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__ExtendsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getExtendsTypeReferenceParserRuleCall_5_1_0()); }
	ruleTypeReference{ after(grammarAccess.getTypedefAccess().getExtendsTypeReferenceParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__MembersAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefAccess().getMembersClassMemberParserRuleCall_6_0()); }
	ruleClassMember{ after(grammarAccess.getTypedefAccess().getMembersClassMemberParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getTypeTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getTypeReferenceAccess().getTypeTypeQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTypeReferenceAccess().getTypeTypeQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTypeReferenceAccess().getTypeTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__ArgumentsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getArgumentsTypeReferenceParserRuleCall_1_1_0()); }
	ruleTypeReference{ after(grammarAccess.getTypeReferenceAccess().getArgumentsTypeReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__ArgumentsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getArgumentsTypeReferenceParserRuleCall_1_2_1_0()); }
	ruleTypeReference{ after(grammarAccess.getTypeReferenceAccess().getArgumentsTypeReferenceParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassReference__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassReferenceAccess().getTypeClassCrossReference_0_0()); }
(
{ before(grammarAccess.getClassReferenceAccess().getTypeClassQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getClassReferenceAccess().getTypeClassQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getClassReferenceAccess().getTypeClassCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassReference__ArgumentsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassReferenceAccess().getArgumentsTypeReferenceParserRuleCall_1_1_0()); }
	ruleTypeReference{ after(grammarAccess.getClassReferenceAccess().getArgumentsTypeReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassReference__ArgumentsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassReferenceAccess().getArgumentsTypeReferenceParserRuleCall_1_2_1_0()); }
	ruleTypeReference{ after(grammarAccess.getClassReferenceAccess().getArgumentsTypeReferenceParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceReference__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceReferenceAccess().getTypeInterfaceCrossReference_0_0()); }
(
{ before(grammarAccess.getInterfaceReferenceAccess().getTypeInterfaceQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getInterfaceReferenceAccess().getTypeInterfaceQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getInterfaceReferenceAccess().getTypeInterfaceCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceReference__ArgumentsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceReferenceAccess().getArgumentsTypeReferenceParserRuleCall_1_1_0()); }
	ruleTypeReference{ after(grammarAccess.getInterfaceReferenceAccess().getArgumentsTypeReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceReference__ArgumentsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceReferenceAccess().getArgumentsTypeReferenceParserRuleCall_1_2_1_0()); }
	ruleTypeReference{ after(grammarAccess.getInterfaceReferenceAccess().getArgumentsTypeReferenceParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getVariableDeclarationAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeTypeReferenceParserRuleCall_2_1_0()); }
	ruleTypeReference{ after(grammarAccess.getVariableDeclarationAccess().getTypeTypeReferenceParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ExpressionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getVariableDeclarationAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__ModifiedAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getModifiedModifierParserRuleCall_1_0()); }
	ruleModifier{ after(grammarAccess.getVariableMemberDeclarationAccess().getModifiedModifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getNameValidIDParserRuleCall_3_0()); }
	ruleValidID{ after(grammarAccess.getVariableMemberDeclarationAccess().getNameValidIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__GetterAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getGetterFunctionMemberDeclarationCrossReference_4_1_0()); }
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getGetterFunctionMemberDeclarationGetterSetterIDParserRuleCall_4_1_0_1()); }
	ruleGetterSetterID{ after(grammarAccess.getVariableMemberDeclarationAccess().getGetterFunctionMemberDeclarationGetterSetterIDParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getVariableMemberDeclarationAccess().getGetterFunctionMemberDeclarationCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__SetterAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getSetterFunctionMemberDeclarationCrossReference_4_3_0()); }
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getSetterFunctionMemberDeclarationGetterSetterIDParserRuleCall_4_3_0_1()); }
	ruleGetterSetterID{ after(grammarAccess.getVariableMemberDeclarationAccess().getSetterFunctionMemberDeclarationGetterSetterIDParserRuleCall_4_3_0_1()); }
)
{ after(grammarAccess.getVariableMemberDeclarationAccess().getSetterFunctionMemberDeclarationCrossReference_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__TypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getTypeTypeReferenceParserRuleCall_6_0()); }
	ruleTypeReference{ after(grammarAccess.getVariableMemberDeclarationAccess().getTypeTypeReferenceParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableMemberDeclaration__ExpressionAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableMemberDeclarationAccess().getExpressionExpressionParserRuleCall_7_1_0()); }
	ruleExpression{ after(grammarAccess.getVariableMemberDeclarationAccess().getExpressionExpressionParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__ModifiedAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getModifiedModifierParserRuleCall_1_0()); }
	ruleModifier{ after(grammarAccess.getFunctionMemberDeclarationAccess().getModifiedModifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getNameValidIDParserRuleCall_3_0()); }
	ruleValidID{ after(grammarAccess.getFunctionMemberDeclarationAccess().getNameValidIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__ParametersAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getParametersFormalParameterParserRuleCall_5_0_0()); }
	ruleFormalParameter{ after(grammarAccess.getFunctionMemberDeclarationAccess().getParametersFormalParameterParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__ParametersAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getParametersFormalParameterParserRuleCall_5_1_1_0()); }
	ruleFormalParameter{ after(grammarAccess.getFunctionMemberDeclarationAccess().getParametersFormalParameterParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__ReturnTypeAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getReturnTypeTypeReferenceParserRuleCall_7_1_0()); }
	ruleTypeReference{ after(grammarAccess.getFunctionMemberDeclarationAccess().getReturnTypeTypeReferenceParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemberDeclaration__BodyAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemberDeclarationAccess().getBodyBlockExpressionParserRuleCall_8_0()); }
	ruleBlockExpression{ after(grammarAccess.getFunctionMemberDeclarationAccess().getBodyBlockExpressionParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__ModifiedAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getModifiedModifierParserRuleCall_1_0()); }
	ruleModifier{ after(grammarAccess.getConstructorAccess().getModifiedModifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__ParametersAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getParametersFormalParameterParserRuleCall_5_0_0()); }
	ruleFormalParameter{ after(grammarAccess.getConstructorAccess().getParametersFormalParameterParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__ParametersAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getParametersFormalParameterParserRuleCall_5_1_1_0()); }
	ruleFormalParameter{ after(grammarAccess.getConstructorAccess().getParametersFormalParameterParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__BodyAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getBodyBlockExpressionParserRuleCall_7_0()); }
	ruleBlockExpression{ after(grammarAccess.getConstructorAccess().getBodyBlockExpressionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__OptionalAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getOptionalQuestionMarkKeyword_0_0()); }
(
{ before(grammarAccess.getFormalParameterAccess().getOptionalQuestionMarkKeyword_0_0()); }

	'?' 

{ after(grammarAccess.getFormalParameterAccess().getOptionalQuestionMarkKeyword_0_0()); }
)

{ after(grammarAccess.getFormalParameterAccess().getOptionalQuestionMarkKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__TypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getTypeTypeReferenceParserRuleCall_2_1_0()); }
	ruleTypeReference{ after(grammarAccess.getFormalParameterAccess().getTypeTypeReferenceParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__DefaultValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getDefaultValueLiteralParserRuleCall_3_1_0()); }
	ruleLiteral{ after(grammarAccess.getFormalParameterAccess().getDefaultValueLiteralParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__StaticAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getStaticStaticKeyword_1_0_0()); }
(
{ before(grammarAccess.getModifierAccess().getStaticStaticKeyword_1_0_0()); }

	'static' 

{ after(grammarAccess.getModifierAccess().getStaticStaticKeyword_1_0_0()); }
)

{ after(grammarAccess.getModifierAccess().getStaticStaticKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__FinalAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getFinalFinalKeyword_1_1_0()); }
(
{ before(grammarAccess.getModifierAccess().getFinalFinalKeyword_1_1_0()); }

	'final' 

{ after(grammarAccess.getModifierAccess().getFinalFinalKeyword_1_1_0()); }
)

{ after(grammarAccess.getModifierAccess().getFinalFinalKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__DynamicAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getDynamicDynamicKeyword_1_2_0()); }
(
{ before(grammarAccess.getModifierAccess().getDynamicDynamicKeyword_1_2_0()); }

	'dynamic' 

{ after(grammarAccess.getModifierAccess().getDynamicDynamicKeyword_1_2_0()); }
)

{ after(grammarAccess.getModifierAccess().getDynamicDynamicKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__OverrideAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getOverrideOverrideKeyword_1_3_0()); }
(
{ before(grammarAccess.getModifierAccess().getOverrideOverrideKeyword_1_3_0()); }

	'override' 

{ after(grammarAccess.getModifierAccess().getOverrideOverrideKeyword_1_3_0()); }
)

{ after(grammarAccess.getModifierAccess().getOverrideOverrideKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__InlineAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getInlineInlineKeyword_1_4_0()); }
(
{ before(grammarAccess.getModifierAccess().getInlineInlineKeyword_1_4_0()); }

	'inline' 

{ after(grammarAccess.getModifierAccess().getInlineInlineKeyword_1_4_0()); }
)

{ after(grammarAccess.getModifierAccess().getInlineInlineKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__VisibilityAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getVisibilityVisibilityEnumRuleCall_1_5_0()); }
	ruleVisibility{ after(grammarAccess.getModifierAccess().getVisibilityVisibilityEnumRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getParametersTypeParameterParserRuleCall_1_0()); }
	ruleTypeParameter{ after(grammarAccess.getTypeParametersAccess().getParametersTypeParameterParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__ParametersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getParametersTypeParameterParserRuleCall_2_1_0()); }
	ruleTypeParameter{ after(grammarAccess.getTypeParametersAccess().getParametersTypeParameterParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getNameValidIDParserRuleCall_0_0()); }
	ruleValidID{ after(grammarAccess.getTypeParameterAccess().getNameValidIDParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__ConstraintsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getConstraintsTypeReferenceParserRuleCall_1_2_0()); }
	ruleTypeReference{ after(grammarAccess.getTypeParameterAccess().getConstraintsTypeReferenceParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__ConstraintsAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getConstraintsTypeReferenceParserRuleCall_1_3_1_0()); }
	ruleTypeReference{ after(grammarAccess.getTypeParameterAccess().getConstraintsTypeReferenceParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__FeatureAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getFeatureFeatureCrossReference_0_1_0()); }
(
{ before(grammarAccess.getAssignmentAccess().getFeatureFeatureFeatureIDParserRuleCall_0_1_0_1()); }
	ruleFeatureID{ after(grammarAccess.getAssignmentAccess().getFeatureFeatureFeatureIDParserRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getAssignmentAccess().getFeatureFeatureCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValueAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getValueAssignmentParserRuleCall_0_3_0()); }
	ruleAssignment{ after(grammarAccess.getAssignmentAccess().getValueAssignmentParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__FeatureAssignment_1_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getFeatureOpMultiAssignParserRuleCall_1_1_0_0_1_0()); }
	ruleOpMultiAssign{ after(grammarAccess.getAssignmentAccess().getFeatureOpMultiAssignParserRuleCall_1_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__RightAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightAssignmentParserRuleCall_1_1_1_0()); }
	ruleAssignment{ after(grammarAccess.getAssignmentAccess().getRightAssignmentParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getFeatureOpOrParserRuleCall_1_0_0_1_0()); }
	ruleOpOr{ after(grammarAccess.getOrExpressionAccess().getFeatureOpOrParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getFeatureOpAndParserRuleCall_1_0_0_1_0()); }
	ruleOpAnd{ after(grammarAccess.getAndExpressionAccess().getFeatureOpAndParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightOtherOperatorExpressionParserRuleCall_1_1_0()); }
	ruleOtherOperatorExpression{ after(grammarAccess.getAndExpressionAccess().getRightOtherOperatorExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getFeatureOpOtherParserRuleCall_1_0_0_1_0()); }
	ruleOpOther{ after(grammarAccess.getOtherOperatorExpressionAccess().getFeatureOpOtherParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_0()); }
	ruleCompareExpression{ after(grammarAccess.getOtherOperatorExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getFeatureOpCompareParserRuleCall_1_0_0_1_0()); }
	ruleOpCompare{ after(grammarAccess.getCompareExpressionAccess().getFeatureOpCompareParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getRightBitwiseExpressionParserRuleCall_1_1_0()); }
	ruleBitwiseExpression{ after(grammarAccess.getCompareExpressionAccess().getRightBitwiseExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpressionAccess().getFeatureOpBitwiseParserRuleCall_1_0_0_1_0()); }
	ruleOpBitwise{ after(grammarAccess.getBitwiseExpressionAccess().getFeatureOpBitwiseParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpressionAccess().getRightBitshiftExpressionParserRuleCall_1_1_0()); }
	ruleBitshiftExpression{ after(grammarAccess.getBitwiseExpressionAccess().getRightBitshiftExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitshiftExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitshiftExpressionAccess().getFeatureOpBitshiftParserRuleCall_1_0_0_1_0()); }
	ruleOpBitshift{ after(grammarAccess.getBitshiftExpressionAccess().getFeatureOpBitshiftParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitshiftExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitshiftExpressionAccess().getRightAddExpressionParserRuleCall_1_1_0()); }
	ruleAddExpression{ after(grammarAccess.getBitshiftExpressionAccess().getRightAddExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getFeatureOpAddParserRuleCall_1_0_0_1_0()); }
	ruleOpAdd{ after(grammarAccess.getAddExpressionAccess().getFeatureOpAddParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getRightSubtractExpressionParserRuleCall_1_1_0()); }
	ruleSubtractExpression{ after(grammarAccess.getAddExpressionAccess().getRightSubtractExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractExpressionAccess().getFeatureOpSubtractParserRuleCall_1_0_0_1_0()); }
	ruleOpSubtract{ after(grammarAccess.getSubtractExpressionAccess().getFeatureOpSubtractParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractExpressionAccess().getRightMultiplyExpressionParserRuleCall_1_1_0()); }
	ruleMultiplyExpression{ after(grammarAccess.getSubtractExpressionAccess().getRightMultiplyExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplyExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplyExpressionAccess().getFeatureOpMultiplyParserRuleCall_1_0_0_1_0()); }
	ruleOpMultiply{ after(grammarAccess.getMultiplyExpressionAccess().getFeatureOpMultiplyParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplyExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplyExpressionAccess().getRightDivideExpressionParserRuleCall_1_1_0()); }
	ruleDivideExpression{ after(grammarAccess.getMultiplyExpressionAccess().getRightDivideExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivideExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivideExpressionAccess().getFeatureOpDivideParserRuleCall_1_0_0_1_0()); }
	ruleOpDivide{ after(grammarAccess.getDivideExpressionAccess().getFeatureOpDivideParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivideExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivideExpressionAccess().getRightModuloExpressionParserRuleCall_1_1_0()); }
	ruleModuloExpression{ after(grammarAccess.getDivideExpressionAccess().getRightModuloExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuloExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuloExpressionAccess().getFeatureOpModuloParserRuleCall_1_0_0_1_0()); }
	ruleOpModulo{ after(grammarAccess.getModuloExpressionAccess().getFeatureOpModuloParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuloExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuloExpressionAccess().getRightUnaryOperationParserRuleCall_1_1_0()); }
	ruleUnaryOperation{ after(grammarAccess.getModuloExpressionAccess().getRightUnaryOperationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__FeatureAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getFeatureOpUnaryParserRuleCall_0_1_0()); }
	ruleOpUnary{ after(grammarAccess.getUnaryOperationAccess().getFeatureOpUnaryParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__OperandAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getOperandPreIncrementOperationParserRuleCall_0_2_0()); }
	rulePreIncrementOperation{ after(grammarAccess.getUnaryOperationAccess().getOperandPreIncrementOperationParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementOperation__FeatureAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementOperationAccess().getFeatureOpIncrementParserRuleCall_0_0_1_0()); }
	ruleOpIncrement{ after(grammarAccess.getPreIncrementOperationAccess().getFeatureOpIncrementParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementOperation__OperandAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementOperationAccess().getOperandPostIncrementOperationParserRuleCall_0_0_2_0()); }
	rulePostIncrementOperation{ after(grammarAccess.getPreIncrementOperationAccess().getOperandPostIncrementOperationParserRuleCall_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementOperation__OperandAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementOperationAccess().getOperandMemberFeatureCallParserRuleCall_0_0_1_0()); }
	ruleMemberFeatureCall{ after(grammarAccess.getPostIncrementOperationAccess().getOperandMemberFeatureCallParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementOperation__FeatureAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementOperationAccess().getFeatureOpIncrementParserRuleCall_0_0_2_0()); }
	ruleOpIncrement{ after(grammarAccess.getPostIncrementOperationAccess().getFeatureOpIncrementParserRuleCall_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__FeatureAssignment_1_0_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFeatureFeatureCrossReference_1_0_0_0_2_0()); }
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFeatureFeatureFeatureIDParserRuleCall_1_0_0_0_2_0_1()); }
	ruleFeatureID{ after(grammarAccess.getMemberFeatureCallAccess().getFeatureFeatureFeatureIDParserRuleCall_1_0_0_0_2_0_1()); }
)
{ after(grammarAccess.getMemberFeatureCallAccess().getFeatureFeatureCrossReference_1_0_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__ValueAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getValueAssignmentParserRuleCall_1_0_1_0()); }
	ruleAssignment{ after(grammarAccess.getMemberFeatureCallAccess().getValueAssignmentParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__FeatureAssignment_1_1_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFeatureExpressionParserRuleCall_1_1_0_0_2_0()); }
	ruleExpression{ after(grammarAccess.getMemberFeatureCallAccess().getFeatureExpressionParserRuleCall_1_1_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__ValueAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getValueAssignmentParserRuleCall_1_1_1_0()); }
	ruleAssignment{ after(grammarAccess.getMemberFeatureCallAccess().getValueAssignmentParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__FeatureAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFeatureFeatureCrossReference_1_2_1_0()); }
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFeatureFeatureFeatureIDParserRuleCall_1_2_1_0_1()); }
	ruleFeatureID{ after(grammarAccess.getMemberFeatureCallAccess().getFeatureFeatureFeatureIDParserRuleCall_1_2_1_0_1()); }
)
{ after(grammarAccess.getMemberFeatureCallAccess().getFeatureFeatureCrossReference_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__ExplicitOperationCallAssignment_1_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_2_2_0_0()); }
(
{ before(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_2_2_0_0()); }

	'(' 

{ after(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_2_2_0_0()); }
)

{ after(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__ArgumentsAssignment_1_2_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getArgumentsExpressionParserRuleCall_1_2_2_1_0_0()); }
	ruleExpression{ after(grammarAccess.getMemberFeatureCallAccess().getArgumentsExpressionParserRuleCall_1_2_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__ArgumentsAssignment_1_2_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getArgumentsExpressionParserRuleCall_1_2_2_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getMemberFeatureCallAccess().getArgumentsExpressionParserRuleCall_1_2_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__FeatureAssignment_1_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFeatureExpressionParserRuleCall_1_3_2_0()); }
	ruleExpression{ after(grammarAccess.getMemberFeatureCallAccess().getFeatureExpressionParserRuleCall_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__ExplicitOperationCallAssignment_1_3_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_3_4_0_0()); }
(
{ before(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_3_4_0_0()); }

	'(' 

{ after(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_3_4_0_0()); }
)

{ after(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_3_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__ArgumentsAssignment_1_3_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getArgumentsExpressionParserRuleCall_1_3_4_1_0_0()); }
	ruleExpression{ after(grammarAccess.getMemberFeatureCallAccess().getArgumentsExpressionParserRuleCall_1_3_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__ArgumentsAssignment_1_3_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getArgumentsExpressionParserRuleCall_1_3_4_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getMemberFeatureCallAccess().getArgumentsExpressionParserRuleCall_1_3_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__ExpressionsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getExpressionsExpressionInsideBlockParserRuleCall_2_0_0()); }
	ruleExpressionInsideBlock{ after(grammarAccess.getBlockExpressionAccess().getExpressionsExpressionInsideBlockParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarations__DeclarationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationsAccess().getDeclarationsVariableDeclarationParserRuleCall_2_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getVariableDeclarationsAccess().getDeclarationsVariableDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarations__DeclarationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationsAccess().getDeclarationsVariableDeclarationParserRuleCall_3_1_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getVariableDeclarationsAccess().getDeclarationsVariableDeclarationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__IfAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getIfExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ThenAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getThenExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getThenExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseExpressionParserRuleCall_6_1_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getElseExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__PredicateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getPredicateExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getWhileExpressionAccess().getPredicateExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__BodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getBodyExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getWhileExpressionAccess().getBodyExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getBodyExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getDoWhileExpressionAccess().getBodyExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__PredicateAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getPredicateExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getDoWhileExpressionAccess().getPredicateExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__DeclaredParamAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getDeclaredParamFormalParameterParserRuleCall_1_0_2_0()); }
	ruleFormalParameter{ after(grammarAccess.getForLoopExpressionAccess().getDeclaredParamFormalParameterParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__ForExpressionAssignment_1_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getForExpressionExpressionParserRuleCall_1_0_4_0()); }
	ruleExpression{ after(grammarAccess.getForLoopExpressionAccess().getForExpressionExpressionParserRuleCall_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getBodyExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getForLoopExpressionAccess().getBodyExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getReturnExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getThrowExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getTryCatchExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchExpression__CatchClausesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getCatchClausesCatchClauseParserRuleCall_3_0()); }
	ruleCatchClause{ after(grammarAccess.getTryCatchExpressionAccess().getCatchClausesCatchClauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__DeclaredParamAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClauseAccess().getDeclaredParamFormalParameterParserRuleCall_2_0()); }
	ruleFormalParameter{ after(grammarAccess.getCatchClauseAccess().getDeclaredParamFormalParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClauseAccess().getExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getCatchClauseAccess().getExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__SwitchAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__CasesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getCasesCasePartParserRuleCall_4_0()); }
	ruleCasePart{ after(grammarAccess.getSwitchExpressionAccess().getCasesCasePartParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__DefaultAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDefaultExpressionParserRuleCall_5_2_0()); }
	ruleExpression{ after(grammarAccess.getSwitchExpressionAccess().getDefaultExpressionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__CasesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getCasesExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getCasePartAccess().getCasesExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__CasesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getCasesExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getCasePartAccess().getCasesExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__ThenAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getThenExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getCasePartAccess().getThenExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__ParametersAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getParametersFormalParameterParserRuleCall_3_0_0()); }
	ruleFormalParameter{ after(grammarAccess.getFunctionExpressionAccess().getParametersFormalParameterParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__ParametersAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getParametersFormalParameterParserRuleCall_3_1_1_0()); }
	ruleFormalParameter{ after(grammarAccess.getFunctionExpressionAccess().getParametersFormalParameterParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__ReturnTypeAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getReturnTypeTypeReferenceParserRuleCall_5_1_0()); }
	ruleTypeReference{ after(grammarAccess.getFunctionExpressionAccess().getReturnTypeTypeReferenceParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__BodyAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getBodyBlockExpressionParserRuleCall_6_0()); }
	ruleBlockExpression{ after(grammarAccess.getFunctionExpressionAccess().getBodyBlockExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__FeatureAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureFeatureCrossReference_1_0()); }
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureFeatureFeatureIDParserRuleCall_1_0_1()); }
	ruleFeatureID{ after(grammarAccess.getFeatureCallAccess().getFeatureFeatureFeatureIDParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getFeatureCallAccess().getFeatureFeatureCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__ExplicitOperationCallAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_2_0_0()); }
(
{ before(grammarAccess.getFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_2_0_0()); }

	'(' 

{ after(grammarAccess.getFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_2_0_0()); }
)

{ after(grammarAccess.getFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__ArgumentsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getArgumentsExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getFeatureCallAccess().getArgumentsExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__ArgumentsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getArgumentsExpressionParserRuleCall_2_2_1_0()); }
	ruleExpression{ after(grammarAccess.getFeatureCallAccess().getArgumentsExpressionParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__ConstructorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getConstructorTypeReferenceParserRuleCall_2_0()); }
	ruleTypeReference{ after(grammarAccess.getConstructorCallAccess().getConstructorTypeReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__ArgumentsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getArgumentsExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getConstructorCallAccess().getArgumentsExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__ArgumentsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getArgumentsExpressionParserRuleCall_5_1_0()); }
	ruleExpression{ after(grammarAccess.getConstructorCallAccess().getArgumentsExpressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__IsTrueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
(
{ before(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }

	'true' 

{ after(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
)

{ after(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__ValueAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_1_0_0()); }
	RULE_INT{ after(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getValueFloatParserRuleCall_1_0()); }
	ruleFloat{ after(grammarAccess.getFloatLiteralAccess().getValueFloatParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegularExpressionLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularExpressionLiteralAccess().getValueREGULAR_EXPRESSIONTerminalRuleCall_1_0()); }
	RULE_REGULAR_EXPRESSION{ after(grammarAccess.getRegularExpressionLiteralAccess().getValueREGULAR_EXPRESSIONTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__ElementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getElementsExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getArrayLiteralAccess().getElementsExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__ElementsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getElementsExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getArrayLiteralAccess().getElementsExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__ElementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectLiteralAccess().getElementsObjectElementParserRuleCall_2_0()); }
	ruleObjectElement{ after(grammarAccess.getObjectLiteralAccess().getElementsObjectElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__ElementsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectLiteralAccess().getElementsObjectElementParserRuleCall_3_1_0()); }
	ruleObjectElement{ after(grammarAccess.getObjectLiteralAccess().getElementsObjectElementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectElement__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectElementAccess().getKeyValidIDParserRuleCall_0_0()); }
	ruleValidID{ after(grammarAccess.getObjectElementAccess().getKeyValidIDParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectElement__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectElementAccess().getValueExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getObjectElementAccess().getValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_EFLOAT : RULE_INT 'e' '-'? RULE_INT;

RULE_ID : ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_HEX : '0x' ('0'..'9'|'A'..'F')+;

RULE_INT : ('0'..'9')+;

RULE_REGULAR_EXPRESSION : '~/' ('\\/'|~('/'))+ '/' ('i'|'g'|'m'|'s'|'u')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


